(function(o,t){typeof exports=="object"&&typeof module<"u"?t(exports,require("vue"),require("@vueuse/core"),require("vee-validate")):typeof define=="function"&&define.amd?define(["exports","vue","@vueuse/core","vee-validate"],t):(o=typeof globalThis<"u"?globalThis:o||self,t(o.OpenElectionCompassUI={},o.Vue,o.core,o["vee-validate"]))})(this,function(o,t,v,m){"use strict";const S=`/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}:root{--theme-primary-color: #FFD01C;--shadow-normal: 0 4px 6px -1px rgba(0, 0, 0, .1), 0 2px 4px -1px rgba(0, 0, 0, .06);--shadow-focus: 0 0 0 3px rgba(0, 10, 30, .1), 0 10px 15px -3px rgba(0, 0, 0, .1), 0 4px 6px -2px rgba(0, 0, 0, .05);--shadow-hover: 0 10px 15px -3px rgba(0, 0, 0, .1), 0 4px 6px -2px rgba(0, 0, 0, .05);--border-radius: 5px;--theme-primary-background: #FFD01C;--theme-primary-text: #000;--theme-primary-border: #D69E2E;--theme-base-background: #FFF;--theme-base-text: #000;--theme-base-border: #EDF2F7;--theme-positive-background: #68D391;--theme-positive-text: #FFF;--theme-positive-border: #38A169;--theme-neutral-background: #e6ebf0;--theme-neutral-text: #4a5568;--theme-neutral-border: #CBD5E0;--theme-negative-background: #FC8181;--theme-negative-text: #FFF;--theme-negative-border: #E53E3E;--theme-disabled-background: #F7FAFC;--theme-disabled-text: #E2E8F0;--theme-disabled-border: #EDF2F7;--theme-gray-background: #CBD5E0;--theme-gray-text: #000;--theme-white-background: #FFF;--theme-white-text: #000;--theme-white-border: #CBD5E0;--theme-primary-dark-background: #D69E2E;--theme-primary-dark-text: #FFF;--theme-primary-dark-border: #975A16;--theme-dark-background: #2D3748;--theme-dark-text: #E2E8F0;--theme-dark-border: #1A202C}*{-webkit-tap-highlight-color:transparent}blockquote,dl,dd,h1,h2,h3,h4,h5,h6,hr,figure,p,pre{margin:0}button{background-color:transparent;background-image:none;border:0;cursor:pointer}fieldset{margin:0;padding:0}ol,ul{list-style:none;margin:0;padding:0}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}*,:before,:after{box-sizing:border-box}hr{border-top-width:1px}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{padding:0;line-height:inherit;color:inherit}img,svg,video,canvas,audio,iframe,embed,object{vertical-align:middle;display:block}img,video{max-width:100%;height:auto}button:focus,input:focus,textarea:focus{outline:none;box-shadow:0 0 0 3px #cbd5e0}.tooltip *{outline:none!important}h2{font-size:1.5em;line-height:1.25em;font-weight:700;margin-bottom:2em}@media (min-width: 40em){h2{font-size:1.875em}h2+p{font-size:1.25em}}@media (min-width: 60em){h2{font-size:2.25em}h2+p{font-size:1.5em}}
`,f=t.defineComponent({name:"AccordionList",props:{items:{type:Array,required:!0},openFirst:{type:Boolean,default:!1}}}),we="",d=(e,n)=>{const i=e.__vccOpts||e;for(const[s,r]of n)i[s]=r;return i},C={class:"accordion-list"},F=["open"];function E(e,n,i,s,r,p){return t.openBlock(),t.createElementBlock("div",C,[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.items,(a,l)=>(t.openBlock(),t.createElementBlock("details",{key:a.alias,class:"accordion-list__item",open:e.openFirst&&l===0},[t.createElementVNode("summary",null,t.toDisplayString(a.caption),1),t.renderSlot(e.$slots,a.alias)],8,F))),128))])}const N=d(f,[["render",E]]);f.__docgenInfo={displayName:"AccordionList",description:"Renders an accordion using the elements details and summary.",tags:{},exportName:"default",props:[{name:"items",description:"List of items, each with an alias used for the slot name and a caption used for the summary.",type:{name:"Array as () => { alias: string; caption: string }[]"},required:!0},{name:"openFirst",description:"Wether to open the first item in the list by default.",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],slots:[{name:"default",scoped:!0,bindings:[{name:"name",title:"binding"}]}]};const h=t.defineComponent({name:"IconDisplay",props:{name:{type:String,required:!0},monospace:{type:Boolean,default:!0},spinning:{type:Boolean,default:!1}}});function T(e,n,i,s,r,p){const a=t.resolveComponent("FontAwesomeIcon");return t.openBlock(),t.createBlock(a,{icon:["fas",e.name],class:"icon","fixed-width":e.monospace,spin:e.spinning},null,8,["icon","fixed-width","spin"])}const c=d(h,[["render",T]]);h.__docgenInfo={displayName:"IconDisplay",description:"A simple icon component to display free FontAwesome 5 icons.",tags:{},exportName:"default",props:[{name:"name",description:"The FontAwesome icon identifier (snake-case) to be used.",type:{name:"string"},required:!0},{name:"monospace",description:"Wether the width should be the same for all icons or individual.",type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"spinning",description:"Make the icon spin constantly.",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}]};const y=t.defineComponent({name:"BaseButton",components:{IconDisplay:c},emits:["click"],props:{tag:{type:String,default:"button",validator:e=>["button","a"].includes(e)},href:{type:String,default:null},type:{type:String,default:"button",validator:e=>["button","submit","reset"].includes(e)},theme:{type:String,default:"primary",validator:e=>["primary","positive","neutral","negative","white","primary-dark","transparent"].includes(e)},size:{type:String,default:"normal",validator:e=>["small","normal","large"].includes(e)},textAlign:{type:String,default:"center",validator:e=>["left","center"].includes(e)},left:{type:String,default:""},right:{type:String,default:""},target:{type:String,default:"_self"},disabled:{type:Boolean,default:!1},tabindex:{type:Number,default:0}},computed:{classes(){const e=[`base-button--theme-${this.theme}`,`base-button--size-${this.size}`,`base-button--text-align-${this.textAlign}`];return this.disabled&&e.push("base-button--disabled"),e}},methods:{onClick(e){if(this.disabled){e.preventDefault();return}this.tag==="button"&&e.preventDefault(),this.$emit("click",e)}}}),Ve="",D={key:0,class:"base-button__left-icon"},q={key:1,class:"base-button__caption"},A={key:2,class:"base-button__right-icon"};function z(e,n,i,s,r,p){const a=t.resolveComponent("IconDisplay");return t.openBlock(),t.createBlock(t.resolveDynamicComponent(e.tag),{class:t.normalizeClass(["base-button",e.classes]),disabled:e.disabled,tabindex:e.disabled?-1:e.tabindex,href:e.tag==="a"?e.href:void 0,type:e.tag==="button"?e.type:void 0,target:e.tag==="a"?e.target:void 0,onClick:e.onClick},{default:t.withCtx(()=>[e.left?(t.openBlock(),t.createElementBlock("span",D,[t.createVNode(a,{name:e.left,monospace:""},null,8,["name"])])):t.createCommentVNode("",!0),e.$slots.default?(t.openBlock(),t.createElementBlock("span",q,[t.renderSlot(e.$slots,"default")])):t.createCommentVNode("",!0),e.right?(t.openBlock(),t.createElementBlock("span",A,[t.createVNode(a,{name:e.right,monospace:""},null,8,["name"])])):t.createCommentVNode("",!0)]),_:3},8,["class","disabled","tabindex","href","type","target","onClick"])}const g=d(y,[["render",z]]);y.__docgenInfo={displayName:"BaseButton",description:"Renders a basic button or a-tag with support for icons, themes and sizes.",tags:{},exportName:"default",props:[{name:"tag",description:"The HTML tag to be used.",values:["button","a"],type:{name:"string"},defaultValue:{func:!1,value:"'button'"}},{name:"href",description:"The href attribute \u2013 only applies when tag is set to `a`.",type:{name:"string"},defaultValue:{func:!1,value:"null"}},{name:"type",description:"The type of button \u2013 only applies when tag is set to `button`.",values:["button","submit","reset"],type:{name:"string"},defaultValue:{func:!1,value:"'button'"}},{name:"theme",description:"The global theme to be used. Can indicate the purpose of the button.",values:["primary","positive","neutral","negative","white","primary-dark","transparent"],type:{name:"string"},defaultValue:{func:!1,value:"'primary'"}},{name:"size",description:"The global size to be used.",values:["small","normal","large"],type:{name:"string"},defaultValue:{func:!1,value:"'normal'"}},{name:"textAlign",values:["left","center"],type:{name:"string"},defaultValue:{func:!1,value:"'center'"}},{name:"left",description:"The FontAwesome icon to be displayed left of the caption.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"right",description:"The FontAwesome icon to be displayed right of the caption.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"target",description:"The link target \u2013 only applies when tag is set to `a`.",type:{name:"string"},defaultValue:{func:!1,value:"'_self'"}},{name:"disabled",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"tabindex",type:{name:"number"},defaultValue:{func:!1,value:"0"}}],events:[{name:"click",type:{names:["undefined"]}}],slots:[{name:"default"}]};const b=t.defineComponent({name:"ModalView",components:{BaseButton:g,IconDisplay:c},setup(){const e=t.ref(null);return{isLocked:v.useScrollLock(e)}},props:{visible:{type:Boolean,default:!0},heading:{type:String,required:!0},description:{type:String},buttons:{type:Array,default:null},icon:{type:String,default:null},width:{type:String,default:"normal",validator:e=>["slim","narrow","normal","wide"].includes(e)},noPadding:{type:Boolean,default:!1}},mounted(){this.$watch("visible",e=>{this.isLocked=e})},computed:{classes(){const e=[`modal--width-${this.width}`];return this.noPadding&&e.push("modal--no-padding"),e},defaultButton(){return[{caption:this.$t("ui.modal.done"),theme:"primary",eventName:"close"}]}}}),ve="",I={class:"modal__wrapper"},R={class:"modal__box"},M={key:0,class:"modal__header"},L={class:"modal__heading"},j={key:1,class:"modal__description"},O={key:1,ref:"content",class:"modal__content"},U={class:"modal__actions"};function P(e,n,i,s,r,p){const a=t.resolveComponent("IconDisplay"),l=t.resolveComponent("BaseButton");return t.openBlock(),t.createBlock(t.Transition,{name:"fade",duration:{enter:300,leave:200}},{default:t.withCtx(()=>[e.visible?(t.openBlock(),t.createElementBlock("div",{key:0,class:t.normalizeClass(["modal",e.classes]),role:"dialog","aria-labelledby":"modal__heading","aria-describedby":"modal__description"},[t.createElementVNode("div",I,[t.createElementVNode("div",{class:"modal__overlay",onClick:n[0]||(n[0]=u=>e.$emit("close"))}),t.createElementVNode("div",R,[e.heading?(t.openBlock(),t.createElementBlock("div",M,[e.icon?(t.openBlock(),t.createBlock(a,{key:0,name:e.icon,class:"modal__icon",spin:e.icon==="slash"},null,8,["name","spin"])):t.createCommentVNode("",!0),t.createElementVNode("h1",L,t.toDisplayString(e.heading),1),e.description?(t.openBlock(),t.createElementBlock("p",j,t.toDisplayString(e.description),1)):t.createCommentVNode("",!0)])):t.createCommentVNode("",!0),e.$slots.default?(t.openBlock(),t.createElementBlock("div",O,[t.renderSlot(e.$slots,"default")],512)):t.createCommentVNode("",!0),t.createElementVNode("div",U,[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.buttons||e.defaultButton,u=>(t.openBlock(),t.createBlock(l,t.mergeProps({key:u.eventName},u,{class:"modal__action",onClick:Te=>u.eventName?e.$emit(u.eventName):()=>{}}),{default:t.withCtx(()=>[t.createTextVNode(t.toDisplayString(u.caption),1)]),_:2},1040,["onClick"]))),128))])])])],2)):t.createCommentVNode("",!0)]),_:3})}const k=d(b,[["render",P]]);b.__docgenInfo={displayName:"ModalView",description:"Wraps content in a modal that can be hidden and shown programmatically.",tags:{},exportName:"default",props:[{name:"visible",description:"Wether the modal is visible.",type:{name:"boolean"},defaultValue:{func:!1,value:"true"}},{name:"heading",description:"The heading of the modal.",type:{name:"string"},required:!0},{name:"description",description:"The description of the modal, appearing below the heading.",type:{name:"string"}},{name:"buttons",description:`An array of actions (buttons) that appear below the modals content. By default, contains a
simple done-button that emits the close-event.`,type:{name:"Array as () => (BaseButtonProps & { eventName: string; caption: string })[]"},defaultValue:{func:!1,value:"null"}},{name:"icon",description:"An icon shown above the modal's heading.",type:{name:"string | null"},defaultValue:{func:!1,value:"null"}},{name:"width",description:"The width of the modal.",values:["slim","narrow","normal","wide"],type:{name:"string"},defaultValue:{func:!1,value:"'normal'"}},{name:"noPadding",description:"Don't add padding to the modal content.",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],events:[{name:"close"},{name:"<undefined>"}],slots:[{name:"default"}]};const _=t.defineComponent({name:"AsyncButton",components:{IconDisplay:c,ModalView:k},emits:["click","success","error"],data(){return{status:"idle",error:null,resetTimeout:null}},props:{action:{type:Function,required:!0},type:{type:String,default:"button",validator:e=>["button","submit","reset"].includes(e)},theme:{type:String,default:"primary",validator:e=>["primary","positive","neutral","negative","white","primary-dark","transparent"].includes(e)},size:{type:String,default:"normal",validator:e=>["small","normal","large"].includes(e)},textAlign:{type:String,default:"center",validator:e=>["left","center"].includes(e)},left:{type:String,default:""},right:{type:String,default:""},disabled:{type:Boolean,default:!1},tabindex:{type:Number,default:0}},computed:{classes(){const e=[`async-button--theme-${this.theme}`,`async-button--size-${this.size}`,`async-button--text-align-${this.textAlign}`];return this.disabledOrBusy&&e.push("async-button--disabled"),e},disabledOrBusy(){return this.disabled||this.status==="pending"}},methods:{onClick(e){this.$emit("click",e),this.status="pending",this.action().then(n=>{this.status="success",this.$emit("success",n),this.scheduleStatusReset()},n=>{this.status="error",this.$emit("error",n),this.error=n.message,this.scheduleStatusReset()})},scheduleStatusReset(e=3e3){this.resetTimeout&&clearTimeout(this.resetTimeout),this.resetTimeout=setTimeout(()=>{this.status="idle"},e)}}}),Se="",W=["disabled","tabindex","type"],H={key:0,class:"icon"},G={key:1,class:"async-button__caption"};function J(e,n,i,s,r,p){const a=t.resolveComponent("IconDisplay"),l=t.resolveComponent("ModalView");return t.openBlock(),t.createElementBlock("div",null,[t.createElementVNode("button",{class:t.normalizeClass(["async-button",e.classes]),disabled:e.disabledOrBusy,tabindex:e.disabledOrBusy?-1:e.tabindex,type:e.type,onClick:n[0]||(n[0]=t.withModifiers(u=>e.onClick(u),["stop"]))},[e.left||e.right?(t.openBlock(),t.createElementBlock("span",{key:0,class:t.normalizeClass(["async-button__icon",`async-button__icon--${e.left?"left":"right"}`])},[t.createVNode(t.Transition,{name:"icon"},{default:t.withCtx(()=>[e.status==="pending"?(t.openBlock(),t.createElementBlock("div",H,[t.createVNode(a,{key:"pending",ref:"pending-icon",name:"slash",monospace:"",spinning:""},null,512)])):e.status==="success"?(t.openBlock(),t.createBlock(a,{key:"success",ref:"success-icon",name:"check",monospace:""},null,512)):e.status==="error"?(t.openBlock(),t.createBlock(a,{key:"error",ref:"error-icon",name:"times",monospace:""},null,512)):(t.openBlock(),t.createBlock(a,{key:"icon",ref:"icon",name:e.left?e.left:e.right,monospace:""},null,8,["name"]))]),_:1})],2)):t.createCommentVNode("",!0),e.$slots.default?(t.openBlock(),t.createElementBlock("span",G,[t.renderSlot(e.$slots,"default")])):t.createCommentVNode("",!0)],10,W),t.createVNode(l,{visible:e.error!==null,heading:e.$t("ui.async-button.error.heading"),icon:"times",width:"slim",buttons:[{caption:e.$t("ui.async-button.error.okay-button"),theme:"primary",eventName:"close"}],onClose:n[1]||(n[1]=u=>e.error=null)},{default:t.withCtx(()=>[t.createTextVNode(t.toDisplayString(e.error),1)]),_:1},8,["visible","heading","buttons"])])}const K=d(_,[["render",J]]);_.__docgenInfo={displayName:"AsyncButton",description:`Renders a basic button with support for icons, themes and sizes. Will execute a given async
function on click, display a loading animation, indicate success or show an error message in a
modal.`,tags:{},exportName:"default",props:[{name:"action",description:`The asynchronous function to execute when the button is clicked. Will trigger the loading
animation and wait for the promise to resolve.`,type:{name:"() => Promise<unknown>"},required:!0},{name:"type",description:"The type of button.",values:["button","submit","reset"],type:{name:"string"},defaultValue:{func:!1,value:"'button'"}},{name:"theme",description:"The global theme to be used. Can indicate the purpose of the button.",type:{name:"string"},defaultValue:{func:!1,value:"'primary'"},values:["primary","positive","neutral","negative","white","primary-dark","transparent"]},{name:"size",description:"The global size to be used.",type:{name:"string"},defaultValue:{func:!1,value:"'normal'"},values:["small","normal","large"]},{name:"textAlign",type:{name:"string"},defaultValue:{func:!1,value:"'center'"},values:["left","center"]},{name:"left",description:"The FontAwesome icon to be displayed left of the caption.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"right",description:"The FontAwesome icon to be displayed right of the caption.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"disabled",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}},{name:"tabindex",type:{name:"number"},defaultValue:{func:!1,value:"0"}}],events:[{name:"click",type:{names:["undefined"]}},{name:"success",type:{names:["undefined"]}},{name:"error",type:{names:["undefined"]}}],slots:[{name:"default"}]};const B=t.defineComponent({name:"FieldInput",data(){return{currentValidation:null}},emits:["update:value"],setup(e){const n=t.toRef(e,"alias"),i=t.toRef(e,"name");return{field:m.useField(n,e.rules,{label:i,type:e.type,initialValue:e.value})}},watch:{value(e){this.field.setValue(e)}},props:{alias:{type:String,required:!0},name:{type:String,required:!0},label:{type:String,required:!0},type:{type:String,required:!0,validator:e=>["email","file","number","password","tel","text","url"].includes(e)},value:{type:String,default:null},rules:{type:[String,Object],required:!0},placeholder:{type:String,default:""},description:{type:String,default:""},autocomplete:{type:String,default:void 0},readonly:{type:Boolean,default:!1}},methods:{publish(){this.field.handleBlur(),this.currentValidation=this.field.validate().then(e=>{this.currentValidation=null,e.valid&&this.field.value.value!==null?this.$emit("update:value",this.field.value.value):this.$emit("update:value","")})}}}),Ce="",Q=["for"],X=["type","name","id","placeholder","autocomplete","readonly"],Y={key:0,class:"field-input__description"},Z={key:1,class:"field-input__error"};function x(e,n,i,s,r,p){return t.openBlock(),t.createElementBlock("div",{class:t.normalizeClass({"field-input":!0,"field-input--invalid":e.field.errors.value.length>0,"field-input--valid":e.field.errors.value.length<=0&&e.field.meta.dirty})},[t.createElementVNode("label",{for:e.alias,class:"field-input__label"},t.toDisplayString(e.label),9,Q),t.withDirectives(t.createElementVNode("input",{class:"field-input__input",type:e.type,name:e.alias,id:`field-${e.alias}`,placeholder:e.placeholder,autocomplete:e.autocomplete,readonly:e.readonly,"onUpdate:modelValue":n[0]||(n[0]=a=>e.field.value.value=a),onBlur:n[1]||(n[1]=(...a)=>e.publish&&e.publish(...a)),onChange:n[2]||(n[2]=(...a)=>e.field.handleChange&&e.field.handleChange(...a))},null,40,X),[[t.vModelDynamic,e.field.value.value]]),e.field.errors.value.length<1?(t.openBlock(),t.createElementBlock("small",Y,[t.renderSlot(e.$slots,"description",{},()=>[t.createTextVNode(t.toDisplayString(e.description),1)])])):(t.openBlock(),t.createElementBlock("small",Z,t.toDisplayString(e.field.errors.value[0]),1))],2)}const ee=d(B,[["render",x]]);B.__docgenInfo={displayName:"FieldInput",description:`Renders a textual input field, like text, email, number, etc. together with a label, description
and validation.`,tags:{},exportName:"default",props:[{name:"alias",description:"The name of the field in kebab-case.",type:{name:"string"},required:!0},{name:"name",description:"The human readable name of the field.",type:{name:"string"},required:!0},{name:"label",description:"The label above the field.",type:{name:"string"},required:!0},{name:"type",description:"The input type.",values:["email","file","number","password","tel","text","url"],type:{name:"string"},required:!0},{name:"value",type:{name:"string"},defaultValue:{func:!1,value:"null"}},{name:"rules",description:"A set of vee-validate rules.",type:{name:"string | Record<string, unknown>"},required:!0},{name:"placeholder",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"description",description:"The description below the field.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"autocomplete",type:{name:"string"},defaultValue:{func:!1,value:"undefined"}},{name:"readonly",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],events:[{name:"update:value",type:{names:["undefined"]}}],slots:[{name:"description"}]};const $=t.defineComponent({name:"FieldSelect",components:{IconDisplay:c},data(){return{currentValidation:null}},emits:["update:value"],setup(e){const n=t.toRef(e,"alias"),i=t.toRef(e,"name");return{field:m.useField(n,e.rules,{label:i,initialValue:e.value})}},watch:{value(e){this.field.setValue(e)}},props:{alias:{type:String,required:!0},name:{type:String,required:!0},label:{type:String,required:!0},value:{type:String,default:null},options:{type:Array,required:!0},rules:{type:[String,Object],required:!0},description:{type:String,default:""},readonly:{type:Boolean,default:!1}},methods:{publish(){this.currentValidation=this.field.validate().then(e=>{this.currentValidation=null,e.valid&&this.field.value.value!==null?this.$emit("update:value",this.field.value.value):this.$emit("update:value","")})}}}),Fe="",te=["for"],ne=["name","id","readonly"],ae={value:null,disabled:""},ie=["value"],le={key:0,class:"field-select__description"},oe={key:1,class:"field-select__error"};function se(e,n,i,s,r,p){const a=t.resolveComponent("IconDisplay");return t.openBlock(),t.createElementBlock("div",{class:t.normalizeClass({"field-select":!0,"field-select--invalid":e.field.errors.value.length>0,"field-select--valid":e.field.errors.value.length<=0&&e.field.meta.dirty})},[t.createElementVNode("label",{for:e.alias,class:"field-select__label"},t.toDisplayString(e.label),9,te),t.createVNode(a,{name:"angle-down",class:"field-select__icon"}),t.withDirectives(t.createElementVNode("select",{class:"field-select__select",name:e.alias,id:`field-${e.alias}`,readonly:e.readonly,"onUpdate:modelValue":n[0]||(n[0]=l=>e.field.value.value=l),onBlur:n[1]||(n[1]=(...l)=>e.field.handleBlur&&e.field.handleBlur(...l)),onChange:n[2]||(n[2]=(...l)=>e.publish&&e.publish(...l))},[t.createElementVNode("option",ae,t.toDisplayString(e.$t("ui.fields.select.choose")),1),(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.options,l=>(t.openBlock(),t.createElementBlock("option",{key:l.value,value:l.value},t.toDisplayString(l.option),9,ie))),128))],40,ne),[[t.vModelSelect,e.field.value.value]]),e.field.errors.value.length<1?(t.openBlock(),t.createElementBlock("small",le,[t.renderSlot(e.$slots,"description",{},()=>[t.createTextVNode(t.toDisplayString(e.description),1)])])):(t.openBlock(),t.createElementBlock("small",oe,t.toDisplayString(e.field.errors.value[0]),1))],2)}const re=d($,[["render",se]]);$.__docgenInfo={displayName:"FieldSelect",description:"Renders a select field together with a label, description and validation.",tags:{},exportName:"default",props:[{name:"alias",description:"The name of the field in kebab-case.",type:{name:"string"},required:!0},{name:"name",description:"The human readable name of the field.",type:{name:"string"},required:!0},{name:"label",description:"The label above the field.",type:{name:"string"},required:!0},{name:"value",type:{name:"string"},defaultValue:{func:!1,value:"null"}},{name:"options",description:"An array of options in this form: `{ value: string, option: string }`.",type:{name:"Array as () => { option: string; value: string }[]"},required:!0},{name:"rules",description:"A set of vee-validate rules.",type:{name:"string | Record<string, unknown>"},required:!0},{name:"description",description:"The description below the field.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"readonly",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],events:[{name:"update:value",type:{names:["undefined"]}}],slots:[{name:"description"}]};const w=t.defineComponent({name:"FieldSwitch",data(){return{currentValidation:null}},emits:["update:value"],setup(e){const n=t.toRef(e,"alias"),i=t.toRef(e,"name");return{field:m.useField(n,e.rules,{label:i,type:"radio",initialValue:e.value})}},watch:{value(e){var n;(n=this.field)==null||n.setValue(e)}},props:{alias:{type:String,required:!0},name:{type:String,required:!0},label:{type:String,required:!0},value:{type:String,default:null},options:{type:Array,required:!0},rules:{type:[String,Object],required:!0},description:{type:String,default:""},readonly:{type:Boolean,default:!1}},methods:{publish(){this.currentValidation=this.field.validate().then(e=>{this.currentValidation=null,e.valid&&this.field.value.value!==null?this.$emit("update:value",this.field.value.value):this.$emit("update:value","")})}}}),Ee="",de=["for"],ue={class:"field-switch__radio-group"},pe=["name","id","value","readonly"],ce=["for"],me={key:0,class:"field-switch__description"},fe={key:1,class:"field-switch__error"};function he(e,n,i,s,r,p){return t.openBlock(),t.createElementBlock("div",{class:t.normalizeClass({"field-switch":!0,"field-switch--invalid":e.field.errors.value.length>0,"field-switch--valid":e.field.errors.value.length<=0&&e.field.meta.dirty})},[t.createElementVNode("label",{for:e.alias,class:"field-switch__label"},t.toDisplayString(e.label),9,de),t.createElementVNode("div",ue,[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.options,a=>(t.openBlock(),t.createElementBlock("div",{key:a.value,class:"field-switch__radio-button"},[t.withDirectives(t.createElementVNode("input",{class:"field-switch__input",type:"radio",name:e.alias,id:`field-${e.alias}-${a.value}`,value:a.value,readonly:e.readonly,"onUpdate:modelValue":n[0]||(n[0]=l=>e.field.value.value=l),onChange:n[1]||(n[1]=(...l)=>e.publish&&e.publish(...l))},null,40,pe),[[t.vModelRadio,e.field.value.value]]),t.createElementVNode("label",{class:"field-switch__button",for:`field-${e.alias}-${a.value}`},t.toDisplayString(a.option),9,ce)]))),128))]),e.field.errors.value.length<1?(t.openBlock(),t.createElementBlock("small",me,[t.renderSlot(e.$slots,"description",{},()=>[t.createTextVNode(t.toDisplayString(e.description),1)])])):(t.openBlock(),t.createElementBlock("small",fe,t.toDisplayString(e.field.errors.value[0]),1))],2)}const ye=d(w,[["render",he]]);w.__docgenInfo={displayName:"FieldSwitch",description:"Renders a radio group but in a switch-like design.",tags:{},exportName:"default",props:[{name:"alias",description:"The name of the field in kebab-case.",type:{name:"string"},required:!0},{name:"name",description:"The human readable name of the field.",type:{name:"string"},required:!0},{name:"label",description:"The label above the field.",type:{name:"string"},required:!0},{name:"value",type:{name:"string"},defaultValue:{func:!1,value:"null"}},{name:"options",description:"An array of options in this form: `{ value: string, option: string }`.",type:{name:"Array as () => { value: string; option: string }[]"},required:!0},{name:"rules",description:"A set of vee-validate rules.",type:{name:"string | Record<string, unknown>"},required:!0},{name:"description",description:"The description below the field.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"readonly",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],events:[{name:"update:value",type:{names:["undefined"]}}],slots:[{name:"description"}]};const V=t.defineComponent({name:"FieldTextarea",data(){return{currentValidation:null}},emits:["update:value"],setup(e){const n=t.toRef(e,"alias"),i=t.toRef(e,"name");return{field:m.useField(n,e.rules,{label:i,initialValue:e.value})}},watch:{value(e){this.field.setValue(e)}},props:{alias:{type:String,required:!0},name:{type:String,required:!0},label:{type:String,required:!0},value:{type:String,default:null},rules:{type:[String,Object],required:!0},placeholder:{type:String,default:""},description:{type:String,default:""},readonly:{type:Boolean,default:!1}},methods:{publish(){this.field.handleBlur(),this.currentValidation=this.field.validate().then(e=>{this.currentValidation=null,e.valid&&this.field.value.value!==null?this.$emit("update:value",this.field.value.value):this.$emit("update:value","")})}}}),Ne="",ge=["for"],be=["name","id","placeholder","readonly"],ke={key:0,class:"field-textarea__description"},_e={key:1,class:"field-textarea__error"};function Be(e,n,i,s,r,p){return t.openBlock(),t.createElementBlock("div",{class:t.normalizeClass({"field-textarea":!0,"field-textarea--invalid":e.field.errors.value.length>0,"field-textarea--valid":e.field.errors.value.length<=0&&e.field.meta.dirty})},[t.createElementVNode("label",{for:e.alias,class:"field-textarea__label"},t.toDisplayString(e.label),9,ge),t.withDirectives(t.createElementVNode("textarea",{class:"field-textarea__textarea",name:e.alias,id:`field-${e.alias}`,placeholder:e.placeholder,readonly:e.readonly,"onUpdate:modelValue":n[0]||(n[0]=a=>e.field.value.value=a),onBlur:n[1]||(n[1]=(...a)=>e.publish&&e.publish(...a)),onChange:n[2]||(n[2]=(...a)=>e.field.handleChange&&e.field.handleChange(...a))},null,40,be),[[t.vModelText,e.field.value.value]]),e.field.errors.value.length<1?(t.openBlock(),t.createElementBlock("small",ke,[t.renderSlot(e.$slots,"description",{},()=>[t.createTextVNode(t.toDisplayString(e.description),1)])])):(t.openBlock(),t.createElementBlock("small",_e,t.toDisplayString(e.field.errors.value[0]),1))],2)}const $e=d(V,[["render",Be]]);V.__docgenInfo={displayName:"FieldTextarea",description:"Renders a textarea together with a label, description and validation.",tags:{},exportName:"default",props:[{name:"alias",description:"The name of the field in kebab-case.",type:{name:"string"},required:!0},{name:"name",description:"The human readable name of the field.",type:{name:"string"},required:!0},{name:"label",description:"The label above the field.",type:{name:"string"},required:!0},{name:"value",type:{name:"string"},defaultValue:{func:!1,value:"null"}},{name:"rules",description:"A set of vee-validate rules.",type:{name:"string | Record<string, unknown>"},required:!0},{name:"placeholder",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"description",description:"The description below the field.",type:{name:"string"},defaultValue:{func:!1,value:"''"}},{name:"readonly",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],events:[{name:"update:value",type:{names:["undefined"]}}],slots:[{name:"description"}]},o.AccordionList=N,o.AsyncButton=K,o.BaseButton=g,o.FieldInput=ee,o.FieldSelect=re,o.FieldSwitch=ye,o.FieldTextarea=$e,o.IconDisplay=c,o.ModalView=k,o.Styles=S,Object.defineProperties(o,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
//# sourceMappingURL=open-election-compass-ui.umd.min.js.map
