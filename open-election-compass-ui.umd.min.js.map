{"version":3,"file":"open-election-compass-ui.umd.min.js","sources":["../src/components/accordion-list/AccordionList.vue","../src/components/icon-display/IconDisplay.vue","../src/components/base-button/BaseButton.vue","../src/components/modal-view/ModalView.vue","../src/components/async-button/AsyncButton.vue","../src/components/fields/input/FieldInput.vue","../src/components/fields/select/FieldSelect.vue","../src/components/fields/switch/FieldSwitch.vue","../src/components/fields/textarea/FieldTextarea.vue"],"sourcesContent":["<template>\n  <div class=\"accordion-list\">\n    <details\n      v-for=\"(item, index) in items\"\n      :key=\"item.alias\"\n      class=\"accordion-list__item\"\n      :open=\"openFirst && index === 0\"\n    >\n      <summary>{{ item.caption }}</summary>\n      <slot :name=\"item.alias\" />\n    </details>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\n/**\n * Renders an accordion using the elements details and summary.\n */\nexport default defineComponent({\n  name: 'AccordionList',\n  props: {\n    /**\n     * List of items, each with an alias used for the slot name and a caption used for the summary.\n     */\n    items: {\n      type: Array as () => { alias: string; caption: string }[],\n      required: true,\n    },\n\n    /**\n     * Wether to open the first item in the list by default.\n     */\n    openFirst: {\n      type: Boolean,\n      default: false,\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.accordion-list {\n  details {\n    background: $theme-neutral-background;\n    color: $theme-neutral-text;\n    overflow: hidden;\n    & + details {\n      border-top: 2px solid $theme-neutral-border;\n    }\n    &:first-of-type {\n      border-radius: $border-radius $border-radius 0 0;\n    }\n    &:last-of-type {\n      border-radius: 0 0 $border-radius $border-radius;\n    }\n    &[open] {\n      padding: 0 1rem 1rem 1rem;\n      summary {\n        margin: 0 -1rem;\n      }\n    }\n  }\n  summary {\n    font-weight: bold;\n    padding: 1em;\n    cursor: pointer;\n    user-select: none;\n    &:hover,\n    &:focus {\n      outline: 0;\n      text-decoration: underline;\n    }\n  }\n}\n\n@media (min-width: 40rem) {\n  .accordion-list {\n    details {\n      &[open] {\n        padding: 0 2rem 2rem 2rem;\n        summary {\n          margin: 0 -2rem;\n        }\n      }\n    }\n    summary {\n      padding: 2em;\n    }\n  }\n}\n</style>\n","<template>\n  <FontAwesomeIcon :icon=\"['fas', name]\" class=\"icon\" :fixed-width=\"monospace\" :spin=\"spinning\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n/**\n * A simple icon component to display free FontAwesome 5 icons.\n */\nexport default defineComponent({\n  name: 'IconDisplay',\n  props: {\n    /**\n     * The FontAwesome icon identifier (snake-case) to be used.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * Wether the width should be the same for all icons or individual.\n     */\n    monospace: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Make the icon spin constantly.\n     */\n    spinning: {\n      type: Boolean,\n      default: false,\n    },\n  },\n});\n</script>\n","<template>\n  <component\n    :is=\"tag\"\n    class=\"base-button\"\n    :class=\"classes\"\n    :disabled=\"disabled\"\n    :tabindex=\"disabled ? -1 : tabindex\"\n    :href=\"tag === 'a' ? href : undefined\"\n    :type=\"tag === 'button' ? type : undefined\"\n    :target=\"tag === 'a' ? target : undefined\"\n    @click=\"onClick\"\n  >\n    <span v-if=\"left\" class=\"base-button__left-icon\">\n      <IconDisplay :name=\"left\" monospace />\n    </span>\n    <span v-if=\"$slots.default\" class=\"base-button__caption\">\n      <slot />\n    </span>\n    <span v-if=\"right\" class=\"base-button__right-icon\">\n      <IconDisplay :name=\"right\" monospace />\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, type PropType } from 'vue';\nimport IconDisplay from '../icon-display/IconDisplay.vue';\n\nexport interface BaseButtonProps {\n  tag?: 'button' | 'a';\n  href?: string;\n  type?: 'button' | 'submit' | 'reset';\n  theme?:\n    | 'primary'\n    | 'positive'\n    | 'neutral'\n    | 'negative'\n    | 'white'\n    | 'primary-dark'\n    | 'transparent';\n  size?: 'small' | 'normal' | 'large';\n  textAlign?: 'left' | 'center';\n  left?: string;\n  right?: string;\n  target?: string;\n  disabled?: boolean;\n  tabindex?: number;\n}\n\n/**\n * Renders a basic button or a-tag with support for icons, themes and sizes.\n */\nexport default defineComponent({\n  name: 'BaseButton',\n  components: {\n    IconDisplay,\n  },\n  emits: ['click'],\n  props: {\n    /**\n     * The HTML tag to be used.\n     */\n    tag: {\n      type: String as PropType<'button' | 'a'>,\n      default: 'button',\n      validator: (value: string) => ['button', 'a'].includes(value),\n    },\n    /**\n     * The href attribute – only applies when tag is set to `a`.\n     */\n    href: {\n      type: String,\n      default: null,\n    },\n    /**\n     * The type of button – only applies when tag is set to `button`.\n     */\n    type: {\n      type: String as PropType<'button' | 'submit' | 'reset'>,\n      default: 'button',\n      validator: (value: string) => ['button', 'submit', 'reset'].includes(value),\n    },\n    /**\n     * The global theme to be used. Can indicate the purpose of the button.\n     */\n    theme: {\n      type: String as PropType<\n        'primary' | 'positive' | 'neutral' | 'negative' | 'white' | 'primary-dark' | 'transparent'\n      >,\n      default: 'primary',\n      validator: (value: string) =>\n        [\n          'primary',\n          'positive',\n          'neutral',\n          'negative',\n          'white',\n          'primary-dark',\n          'transparent',\n        ].includes(value),\n    },\n    /**\n     * The global size to be used.\n     */\n    size: {\n      type: String as PropType<'small' | 'normal' | 'large'>,\n      default: 'normal',\n      validator: (value: string) => ['small', 'normal', 'large'].includes(value),\n    },\n    textAlign: {\n      type: String as PropType<'left' | 'center'>,\n      default: 'center',\n      validator: (value: string) => ['left', 'center'].includes(value),\n    },\n    /**\n     * The FontAwesome icon to be displayed left of the caption.\n     */\n    left: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The FontAwesome icon to be displayed right of the caption.\n     */\n    right: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The link target – only applies when tag is set to `a`.\n     */\n    target: {\n      type: String,\n      default: '_self',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    tabindex: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    classes() {\n      const classes = [\n        `base-button--theme-${this.theme}`,\n        `base-button--size-${this.size}`,\n        `base-button--text-align-${this.textAlign}`,\n      ];\n      if (this.disabled) {\n        classes.push('base-button--disabled');\n      }\n      return classes;\n    },\n  },\n  methods: {\n    onClick(event: MouseEvent) {\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n      if (this.tag === 'button') {\n        event.preventDefault();\n      }\n      this.$emit('click', event);\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.base-button {\n  font-weight: 500;\n  border: 0;\n  border-radius: $border-radius;\n  box-shadow: $shadow-normal;\n  appearance: none;\n  display: inline-flex;\n  flex-wrap: nowrap;\n  align-items: center;\n\n  &:hover {\n    outline: none;\n    box-shadow: $shadow-hover;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: $shadow-focus;\n  }\n\n  &.base-button--theme-primary:disabled,\n  &.base-button--theme-primary.base-button--disabled,\n  &.base-button--theme-positive:disabled,\n  &.base-button--theme-positive.base-button--disabled,\n  &.base-button--theme-neutral:disabled,\n  &.base-button--theme-neutral.base-button--disabled,\n  &.base-button--theme-negative:disabled,\n  &.base-button--theme-negative.base-button--disabled,\n  &.base-button--theme-white:disabled,\n  &.base-button--theme-white.base-button--disabled,\n  &.base-button--theme-primary-dark:disabled,\n  &.base-button--theme-primary-dark.base-button--disabled {\n    box-shadow: $shadow-normal !important;\n    cursor: default;\n    opacity: 0.35;\n  }\n  &.base-button--theme-transparent:disabled,\n  &.base-button--theme-transparent.base-button--disabled {\n    cursor: default;\n    opacity: 0.35;\n  }\n\n  &.base-button--theme-primary {\n    color: $theme-primary-text;\n    background-color: $theme-primary-background;\n    border: 1px solid $theme-primary-border;\n  }\n\n  &.base-button--theme-primary:hover {\n    background-color: lighten($theme-primary-background, 10%);\n    border-color: lighten($theme-primary-border, 10%);\n  }\n\n  &.base-button--theme-primary:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-positive {\n    color: $theme-positive-text;\n    background-color: $theme-positive-background;\n    border: 1px solid $theme-positive-border;\n  }\n\n  &.base-button--theme-positive:hover {\n    background-color: lighten($theme-positive-background, 10%);\n    border-color: lighten($theme-positive-border, 10%);\n  }\n\n  &.base-button--theme-positive:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-neutral {\n    color: $theme-neutral-text;\n    background-color: $theme-neutral-background;\n    border: 1px solid $theme-neutral-border;\n  }\n\n  &.base-button--theme-neutral:hover {\n    background-color: lighten($theme-neutral-background, 2%);\n    border-color: lighten($theme-neutral-border, 2%);\n  }\n\n  &.base-button--theme-neutral:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-negative {\n    color: $theme-negative-text;\n    background-color: $theme-negative-background;\n    border: 1px solid $theme-negative-border;\n  }\n\n  &.base-button--theme-negative:hover {\n    background-color: lighten($theme-negative-background, 10%);\n    border-color: lighten($theme-negative-border, 10%);\n  }\n\n  &.base-button--theme-negative:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-white {\n    color: $theme-white-text;\n    background-color: $theme-white-background;\n    border: 1px solid $theme-white-border;\n  }\n\n  &.base-button--theme-white:hover {\n    background-color: lighten($theme-white-background, 10%);\n    border-color: lighten($theme-white-border, 10%);\n  }\n\n  &.base-button--theme-white:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-primary-dark {\n    color: $theme-primary-dark-text;\n    background-color: $theme-primary-dark-background;\n    border: 1px solid $theme-primary-dark-border;\n  }\n\n  &.base-button--theme-primary-dark:hover,\n  &.base-button--theme-primary-dark:focus {\n    background-color: lighten($theme-primary-dark-background, 10%);\n    border-color: lighten($theme-primary-dark-border, 10%);\n  }\n\n  &.base-button--theme-transparent {\n    color: #4a5568;\n    background-color: transparent;\n    border: 1px solid transparent;\n    box-shadow: none;\n  }\n\n  &.base-button--theme-transparent:hover {\n    border-color: #d5d5d5;\n    box-shadow: $shadow-hover;\n  }\n\n  &.base-button--theme-transparent:focus {\n    box-shadow: $shadow-focus;\n  }\n\n  &.base-button--size-small {\n    padding: 0.75em 1em;\n    font-size: 0.875em;\n  }\n\n  &.base-button--size-normal {\n    padding: 0.65em 0.875em;\n    font-size: 1.15em;\n  }\n\n  &.base-button--size-large {\n    padding: 0.65em 0.875em;\n    font-size: 1.15em;\n  }\n\n  @media screen and (min-width: 50rem) {\n    &.base-button--size-small {\n      font-size: 1em;\n    }\n\n    &.base-button--size-normal {\n      padding: 0.65em 0.875em;\n      font-size: 1.25em;\n    }\n\n    &.base-button--size-large {\n      padding: 0.875em 1.25em;\n      font-size: 1.5em;\n    }\n  }\n\n  &.base-button--text-align-center {\n    justify-content: center;\n  }\n\n  &.base-button--text-align-left {\n    justify-content: flex-start;\n  }\n}\n\n@media (prefers-reduced-motion: no-preference), (update: fast) {\n  .base-button {\n    transition: all 0.2s ease-out;\n  }\n}\n\n.base-button__left-icon {\n  display: inline-block;\n  margin-inline-end: 1em;\n  color: inherit;\n}\n\n.base-button__right-icon {\n  display: inline-block;\n  margin-inline-start: 1em;\n  color: inherit;\n}\n\n@media (min-width: 40em) {\n  .base-button {\n    font-size: 1.2em;\n  }\n}\n</style>\n","<template>\n  <transition name=\"fade\" :duration=\"{ enter: 300, leave: 200 }\">\n    <div\n      v-if=\"visible\"\n      class=\"modal\"\n      :class=\"classes\"\n      role=\"dialog\"\n      aria-labelledby=\"modal__heading\"\n      aria-describedby=\"modal__description\"\n    >\n      <div class=\"modal__wrapper\">\n        <div class=\"modal__overlay\" @click=\"$emit('close')\" />\n        <div class=\"modal__box\">\n          <div class=\"modal__header\" v-if=\"heading\">\n            <IconDisplay v-if=\"icon\" :name=\"icon\" class=\"modal__icon\" :spin=\"icon === 'slash'\" />\n            <h1 class=\"modal__heading\">\n              {{ heading }}\n            </h1>\n            <p v-if=\"description\" class=\"modal__description\">\n              {{ description }}\n            </p>\n          </div>\n          <div v-if=\"$slots.default\" ref=\"content\" class=\"modal__content\">\n            <slot />\n          </div>\n          <div class=\"modal__actions\">\n            <BaseButton\n              v-for=\"button in buttons || defaultButton\"\n              :key=\"button.eventName\"\n              v-bind=\"button\"\n              class=\"modal__action\"\n              @click=\"button.eventName ? $emit(button.eventName) : () => {}\"\n            >\n              {{ button.caption }}\n            </BaseButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, type PropType, ref } from 'vue';\nimport { useScrollLock } from '@vueuse/core';\nimport BaseButton, { type BaseButtonProps } from '../base-button/BaseButton.vue';\nimport IconDisplay from '../icon-display/IconDisplay.vue';\n\nexport interface BaseButtonPropsHelper extends BaseButtonProps {\n  caption: string;\n  eventName: string;\n}\n\n/**\n * Wraps content in a modal that can be hidden and shown programmatically.\n */\nexport default defineComponent({\n  name: 'ModalView',\n  // TODO: emits: ['close'],\n  components: {\n    BaseButton,\n    IconDisplay,\n  },\n  setup() {\n    const content = ref<HTMLElement | null>(null);\n    return {\n      isLocked: useScrollLock(content),\n    };\n  },\n  props: {\n    /**\n     * Wether the modal is visible.\n     */\n    visible: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * The heading of the modal.\n     */\n    heading: {\n      type: String,\n      required: true,\n    },\n\n    /**\n     * The description of the modal, appearing below the heading.\n     */\n    description: {\n      type: String,\n    },\n\n    /**\n     * An array of actions (buttons) that appear below the modals content. By default, contains a\n     * simple done-button that emits the close-event.\n     */\n    buttons: {\n      type: Array as () => (BaseButtonProps & { eventName: string; caption: string })[],\n      default: null,\n    },\n\n    /**\n     * An icon shown above the modal's heading.\n     */\n    icon: {\n      type: String as PropType<string | null>,\n      default: null,\n    },\n\n    /**\n     * The width of the modal.\n     */\n    width: {\n      type: String as PropType<'slim' | 'narrow' | 'normal' | 'wide'>,\n      default: 'normal',\n      validator: (value: string) => ['slim', 'narrow', 'normal', 'wide'].includes(value),\n    },\n\n    /**\n     * Don't add padding to the modal content.\n     */\n    noPadding: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  mounted() {\n    this.$watch('visible', (visible: boolean) => {\n      this.isLocked = visible;\n    });\n  },\n  computed: {\n    classes(): string[] {\n      const classes = [`modal--width-${this.width}`];\n      if (this.noPadding) {\n        classes.push('modal--no-padding');\n      }\n      return classes;\n    },\n    defaultButton(): Partial<BaseButtonPropsHelper>[] {\n      return [\n        {\n          caption: this.$t('ui.modal.done') as string,\n          theme: 'primary',\n          eventName: 'close',\n        },\n      ];\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.modal {\n  &__wrapper {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 400;\n    padding: 1rem;\n  }\n\n  &__overlay {\n    background-color: rgba(#fff, 0.75);\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  &__box {\n    position: relative;\n    z-index: 30;\n    height: auto;\n    max-height: 90vh;\n    width: 100%;\n    max-width: 24rem;\n    background-color: #fff;\n    border-radius: $border-radius;\n    box-shadow: 0 2rem 8rem 0 rgba(#000, 0.25);\n    color: $theme-base-text;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n  }\n  &.modal--width-slim .modal__box {\n    max-width: 24rem;\n  }\n  &.modal--width-narrow .modal__box {\n    max-width: 40rem;\n  }\n  &.modal--width-normal .modal__box {\n    max-width: 60rem;\n  }\n  &.modal--width-wide .modal__box {\n    max-width: 90rem;\n  }\n\n  &__header {\n    padding: 1rem;\n    text-align: center;\n    flex: 1 0 auto;\n  }\n\n  &__icon {\n    font-size: 1.5rem;\n    margin-top: 1rem;\n    margin-right: 0.5em;\n  }\n\n  &__heading {\n    display: inline-block;\n    font-size: 1.5rem;\n    margin: 1rem 0 0 0;\n  }\n\n  &__description {\n    max-width: 40rem;\n    margin: 1rem auto;\n  }\n\n  &__content {\n    overflow-y: auto;\n    padding: 1rem;\n    flex: 1;\n    border-bottom: 2px solid $theme-base-border;\n  }\n  &.modal--no-padding .modal__content {\n    padding: 0;\n    .accordion-list details:first-of-type,\n    .accordion-list details:last-of-type {\n      border-radius: 0;\n    }\n  }\n\n  &__actions {\n    overflow: hidden;\n    padding: 1em;\n    flex-shrink: 0;\n  }\n\n  &__action {\n    width: 100%;\n    & + & {\n      margin-top: 0.5em;\n    }\n  }\n}\n\n@media (min-width: 40rem) {\n  .modal__icon {\n    font-size: 2rem;\n    margin-right: 0;\n  }\n\n  .modal__heading {\n    display: block;\n    font-size: 2rem;\n  }\n\n  .modal__header {\n    padding: 2rem;\n  }\n\n  .modal__content {\n    padding: 2rem;\n  }\n\n  .modal__actions {\n    padding: 2em;\n  }\n\n  .modal__action + .modal__action {\n    margin-top: 1em;\n  }\n}\n\n@media (min-width: 60rem) {\n  .modal__actions {\n    padding: 0 0.5em;\n    text-align: right;\n  }\n  .modal__action {\n    width: auto;\n    display: inline-block;\n    margin: 1em 0.5em;\n    text-align: left;\n    & + & {\n      margin-top: 0;\n    }\n  }\n\n  .modal__header {\n    padding: 2rem 2rem 1rem 2rem;\n  }\n\n  .modal__content {\n    padding: 2rem;\n  }\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  .modal__overlay {\n    transition: opacity 0.3s ease-out;\n  }\n  .modal__box {\n    transition: opacity 0.15s ease-out, transform 0.3s ease-out;\n  }\n}\n\n.fade-enter,\n.fade-leave-to {\n  .modal__overlay {\n    opacity: 0;\n  }\n  .modal__box {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n}\n</style>\n","<template>\n  <div>\n    <button\n      class=\"async-button\"\n      :class=\"classes\"\n      :disabled=\"disabledOrBusy\"\n      :tabindex=\"disabledOrBusy ? -1 : tabindex\"\n      :type=\"type\"\n      @click.stop=\"onClick($event)\"\n    >\n      <span\n        v-if=\"left || right\"\n        :class=\"['async-button__icon', `async-button__icon--${left ? 'left' : 'right'}`]\"\n      >\n        <transition name=\"icon\">\n          <!-- Additional div needed because we cannot apply two animations to the same element -->\n          <div class=\"icon\" v-if=\"status === 'pending'\">\n            <IconDisplay key=\"pending\" ref=\"pending-icon\" name=\"slash\" monospace spinning />\n          </div>\n          <IconDisplay\n            key=\"success\"\n            ref=\"success-icon\"\n            v-else-if=\"status === 'success'\"\n            name=\"check\"\n            monospace\n          />\n          <IconDisplay\n            key=\"error\"\n            ref=\"error-icon\"\n            v-else-if=\"status === 'error'\"\n            name=\"times\"\n            monospace\n          />\n          <IconDisplay key=\"icon\" ref=\"icon\" v-else :name=\"left ? left : right\" monospace />\n        </transition>\n      </span>\n      <span v-if=\"$slots.default\" class=\"async-button__caption\">\n        <slot />\n      </span>\n    </button>\n    <ModalView\n      :visible=\"error !== null\"\n      :heading=\"$t('ui.async-button.error.heading')\"\n      icon=\"times\"\n      width=\"slim\"\n      :buttons=\"[\n        {\n          caption: $t('ui.async-button.error.okay-button'),\n          theme: 'primary',\n          eventName: 'close',\n        },\n      ]\"\n      @close=\"error = null\"\n    >\n      {{ error }}\n    </ModalView>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, type PropType } from 'vue';\nimport IconDisplay from '../icon-display/IconDisplay.vue';\nimport ModalView from '../modal-view/ModalView.vue';\n\nexport interface AsyncButtonProps {\n  action: () => Promise<unknown>;\n  href?: string;\n  type?: 'button' | 'submit' | 'reset';\n  theme?:\n    | 'primary'\n    | 'positive'\n    | 'neutral'\n    | 'negative'\n    | 'white'\n    | 'primary-dark'\n    | 'transparent';\n  size?: 'small' | 'normal' | 'large';\n  textAlign?: 'left' | 'center';\n  left?: string;\n  right?: string;\n  disabled?: boolean;\n  tabindex: number;\n}\n\n/**\n * Renders a basic button with support for icons, themes and sizes. Will execute a given async\n * function on click, display a loading animation, indicate success or show an error message in a\n * modal.\n */\nexport default defineComponent({\n  name: 'AsyncButton',\n  components: {\n    IconDisplay,\n    ModalView,\n  },\n  emits: ['click', 'success', 'error'],\n  data() {\n    return {\n      status: 'idle' as 'idle' | 'pending' | 'error' | 'success',\n      error: null as null | string,\n      resetTimeout: null as null | ReturnType<typeof setTimeout>,\n    };\n  },\n  props: {\n    /**\n     * The asynchronous function to execute when the button is clicked. Will trigger the loading\n     * animation and wait for the promise to resolve.\n     */\n    action: {\n      type: Function as PropType<() => Promise<unknown>>,\n      required: true,\n    },\n    /**\n     * The type of button.\n     */\n    type: {\n      type: String as PropType<'button' | 'submit' | 'reset'>,\n      default: 'button',\n      validator: (value: string) => ['button', 'submit', 'reset'].includes(value),\n    },\n    /**\n     * The global theme to be used. Can indicate the purpose of the button.\n     */\n    theme: {\n      type: String,\n      default: 'primary',\n      validator: (value: string) =>\n        [\n          'primary',\n          'positive',\n          'neutral',\n          'negative',\n          'white',\n          'primary-dark',\n          'transparent',\n        ].includes(value),\n    },\n    /**\n     * The global size to be used.\n     */\n    size: {\n      type: String,\n      default: 'normal',\n      validator: (value: string) => ['small', 'normal', 'large'].includes(value),\n    },\n    textAlign: {\n      type: String,\n      default: 'center',\n      validator: (value: string) => ['left', 'center'].includes(value),\n    },\n    /**\n     * The FontAwesome icon to be displayed left of the caption.\n     */\n    left: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The FontAwesome icon to be displayed right of the caption.\n     */\n    right: {\n      type: String,\n      default: '',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    tabindex: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    classes(): string[] {\n      const classes = [\n        `async-button--theme-${this.theme}`,\n        `async-button--size-${this.size}`,\n        `async-button--text-align-${this.textAlign}`,\n      ];\n      if (this.disabledOrBusy) {\n        classes.push('async-button--disabled');\n      }\n      return classes;\n    },\n    disabledOrBusy(): boolean {\n      return this.disabled || this.status === 'pending';\n    },\n  },\n  methods: {\n    onClick(event: MouseEvent) {\n      this.$emit('click', event);\n      this.status = 'pending';\n      this.action().then(\n        (result) => {\n          this.status = 'success';\n          this.$emit('success', result);\n          this.scheduleStatusReset();\n        },\n        (error: Error) => {\n          this.status = 'error';\n          this.$emit('error', error);\n          this.error = error.message;\n          this.scheduleStatusReset();\n        }\n      );\n    },\n    scheduleStatusReset(delay = 3000) {\n      if (this.resetTimeout) {\n        clearTimeout(this.resetTimeout);\n      }\n      this.resetTimeout = setTimeout(() => {\n        this.status = 'idle';\n      }, delay);\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.async-button {\n  font-weight: 500;\n  border: 0;\n  border-radius: $border-radius;\n  box-shadow: $shadow-normal;\n  appearance: none;\n  display: inline-flex;\n  flex-wrap: nowrap;\n  align-items: center;\n\n  &:hover {\n    outline: none;\n    box-shadow: $shadow-hover;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: $shadow-focus;\n  }\n\n  &.async-button--theme-primary:disabled,\n  &.async-button--theme-primary.async-button--disabled,\n  &.async-button--theme-positive:disabled,\n  &.async-button--theme-positive.async-button--disabled,\n  &.async-button--theme-neutral:disabled,\n  &.async-button--theme-neutral.async-button--disabled,\n  &.async-button--theme-negative:disabled,\n  &.async-button--theme-negative.async-button--disabled,\n  &.async-button--theme-white:disabled,\n  &.async-button--theme-white.async-button--disabled,\n  &.async-button--theme-primary-dark:disabled,\n  &.async-button--theme-primary-dark.async-button--disabled {\n    box-shadow: $shadow-normal !important;\n    cursor: default;\n    opacity: 0.35;\n  }\n  &.async-button--theme-transparent:disabled,\n  &.async-button--theme-transparent.async-button--disabled {\n    cursor: default;\n    opacity: 0.5;\n  }\n\n  &.async-button--theme-primary {\n    color: $theme-primary-text;\n    background-color: $theme-primary-background;\n    border: 1px solid $theme-primary-border;\n  }\n\n  &.async-button--theme-primary:hover {\n    background-color: lighten($theme-primary-background, 10%);\n    border-color: lighten($theme-primary-border, 10%);\n  }\n\n  &.async-button--theme-primary:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-positive {\n    color: $theme-positive-text;\n    background-color: $theme-positive-background;\n    border: 1px solid $theme-positive-border;\n  }\n\n  &.async-button--theme-positive:hover {\n    background-color: lighten($theme-positive-background, 10%);\n    border-color: lighten($theme-positive-border, 10%);\n  }\n\n  &.async-button--theme-positive:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-neutral {\n    color: $theme-neutral-text;\n    background-color: $theme-neutral-background;\n    border: 1px solid $theme-neutral-border;\n  }\n\n  &.async-button--theme-neutral:hover {\n    background-color: lighten($theme-neutral-background, 2%);\n    border-color: lighten($theme-neutral-border, 2%);\n  }\n\n  &.async-button--theme-neutral:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-negative {\n    color: $theme-negative-text;\n    background-color: $theme-negative-background;\n    border: 1px solid $theme-negative-border;\n  }\n\n  &.async-button--theme-negative:hover {\n    background-color: lighten($theme-negative-background, 10%);\n    border-color: lighten($theme-negative-border, 10%);\n  }\n\n  &.async-button--theme-negative:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-white {\n    color: $theme-white-text;\n    background-color: $theme-white-background;\n    border: 1px solid $theme-white-border;\n  }\n\n  &.async-button--theme-white:hover {\n    background-color: lighten($theme-white-background, 10%);\n    border-color: lighten($theme-white-border, 10%);\n  }\n\n  &.async-button--theme-white:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-primary-dark {\n    color: $theme-primary-dark-text;\n    background-color: $theme-primary-dark-background;\n    border: 1px solid $theme-primary-dark-border;\n  }\n\n  &.async-button--theme-primary-dark:hover,\n  &.async-button--theme-primary-dark:focus {\n    background-color: lighten($theme-primary-dark-background, 10%);\n    border-color: lighten($theme-primary-dark-border, 10%);\n  }\n\n  &.async-button--theme-transparent {\n    color: #4a5568;\n    background-color: transparent;\n    border: 1px solid transparent;\n    box-shadow: none;\n  }\n\n  &.async-button--theme-transparent:hover {\n    border-color: #d5d5d5;\n    box-shadow: $shadow-hover;\n  }\n\n  &.async-button--theme-transparent:focus {\n    box-shadow: $shadow-focus;\n  }\n\n  &.async-button--size-small {\n    padding: 0.75em 1em;\n    font-size: 0.875em;\n  }\n\n  &.async-button--size-normal {\n    padding: 0.65em 0.875em;\n    font-size: 1.15em;\n  }\n\n  &.async-button--size-large {\n    padding: 0.65em 0.875em;\n    font-size: 1.15em;\n  }\n\n  @media screen and (min-width: 50rem) {\n    &.async-button--size-small {\n      font-size: 1em;\n    }\n\n    &.async-button--size-normal {\n      padding: 0.65em 0.875em;\n      font-size: 1.25em;\n    }\n\n    &.async-button--size-large {\n      padding: 0.875em 1.25em;\n      font-size: 1.5em;\n    }\n  }\n\n  &.async-button--text-align-center {\n    justify-content: center;\n  }\n\n  &.async-button--text-align-left {\n    justify-content: flex-start;\n  }\n}\n\n.async-button__icon {\n  display: inline-block;\n  color: inherit;\n  width: 1.25em;\n  height: 1em;\n  position: relative;\n  .icon {\n    position: absolute;\n    left: 0;\n  }\n}\n\n.async-button__icon--left {\n  margin-inline-start: 1em;\n}\n\n.async-button__icon--right {\n  margin-inline-start: 1em;\n  order: 2;\n}\n\n@media (min-width: 40em) {\n  .async-button {\n    font-size: 1.2em;\n  }\n}\n\n@media (prefers-reduced-motion: no-preference), (update: fast) {\n  .async-button {\n    transition: all 0.2s ease-out;\n  }\n  .icon-enter-active {\n    transition: all 0.55s ease-out;\n  }\n  .icon-enter {\n    transform: translateX(1em);\n    opacity: 0;\n    [dir='rtl'] & {\n      transform: translateX(-1em);\n    }\n  }\n  .icon-leave-active {\n    transition: all 0.25s ease-out;\n  }\n  .icon-leave-to {\n    transform: translateX(-1em);\n    opacity: 0;\n    [dir='rtl'] & {\n      transform: translateX(1em);\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      'field-input': true,\n      'field-input--invalid': field.errors.value.length > 0,\n      'field-input--valid': field.errors.value.length <= 0 && field.meta.dirty,\n    }\"\n  >\n    <label :for=\"alias\" class=\"field-input__label\">\n      {{ label }}\n    </label>\n    <input\n      class=\"field-input__input\"\n      :type=\"type\"\n      :name=\"alias\"\n      :id=\"`field-${alias}`\"\n      :placeholder=\"placeholder\"\n      :autocomplete=\"autocomplete\"\n      :readonly=\"readonly\"\n      v-model=\"field.value.value\"\n      @blur=\"publish\"\n      @change=\"field.handleChange\"\n    />\n    <small v-if=\"field.errors.value.length < 1\" class=\"field-input__description\">\n      <slot name=\"description\">{{ description }}</slot>\n    </small>\n    <small v-else class=\"field-input__error\">{{ field.errors.value[0] }}</small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, type PropType, toRef } from 'vue';\nimport { useField, type ValidationResult } from 'vee-validate';\n\n/**\n * Renders a textual input field, like text, email, number, etc. together with a label, description\n * and validation.\n */\nexport default defineComponent({\n  name: 'FieldInput',\n  data() {\n    return {\n      currentValidation: null as null | Promise<void | ValidationResult>,\n    };\n  },\n  emits: ['update:value'],\n  setup(props) {\n    // Create Ref on alias. This is important because vee-validate needs to know if the field name\n    // changes.\n    const alias = toRef(props, 'alias');\n    const name = toRef(props, 'name');\n\n    // Create Field\n    return {\n      field: useField<string>(alias, props.rules, {\n        label: name,\n        type: props.type,\n        initialValue: props.value,\n      }),\n    };\n  },\n  watch: {\n    value(value: string): void {\n      this.field.setValue(value);\n    },\n  },\n  props: {\n    /**\n     * The name of the field in kebab-case.\n     */\n    alias: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The human readable name of the field.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label above the field.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The input type.\n     */\n    type: {\n      type: String as PropType<'email' | 'file' | 'number' | 'password' | 'tel' | 'text' | 'url'>,\n      required: true,\n      validator: (value: string) => {\n        return ['email', 'file', 'number', 'password', 'tel', 'text', 'url'].includes(value);\n      },\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    /**\n     * A set of vee-validate rules.\n     */\n    rules: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      required: true,\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The description below the field.\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    autocomplete: {\n      type: String,\n      default: undefined,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    publish(): void {\n      this.field.handleBlur();\n      this.currentValidation = this.field.validate().then((result: ValidationResult) => {\n        this.currentValidation = null;\n        if (result.valid && this.field.value.value !== null) {\n          this.$emit('update:value', this.field.value.value);\n        } else {\n          this.$emit('update:value', '');\n        }\n      });\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.field-input__label {\n  display: block;\n  margin-bottom: 0.5rem;\n  transition: color 0.2s ease-out;\n}\n\n.field-input--invalid .field-input__label {\n  color: $theme-negative-background;\n}\n\n.field-input__input {\n  padding: 0.5rem;\n  border-radius: 3px;\n  border: 1px solid #ddd;\n  display: block;\n  font-size: 1.4rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: border-color 0.2s ease-out;\n  &:hover {\n    border-color: $theme-neutral-border;\n  }\n  &:focus {\n    outline: none;\n    border-color: #999;\n  }\n  &::placeholder {\n    font-style: italic;\n    color: #ccc;\n  }\n}\n\n.field-input--invalid .field-input__input {\n  border-color: $theme-negative-border;\n}\n\n.field-input__description {\n  display: inline-block;\n  margin-top: 0.5em;\n  font-style: italic;\n  color: #999;\n}\n\n.field-input__error {\n  display: inline-block;\n  margin-top: 0.5em;\n  border-radius: $border-radius;\n  padding: 0.35em 0.5em;\n  background-color: $theme-negative-background;\n  color: $theme-negative-text;\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      'field-select': true,\n      'field-select--invalid': field.errors.value.length > 0,\n      'field-select--valid': field.errors.value.length <= 0 && field.meta.dirty,\n    }\"\n  >\n    <label :for=\"alias\" class=\"field-select__label\">\n      {{ label }}\n    </label>\n    <IconDisplay name=\"angle-down\" class=\"field-select__icon\" />\n    <select\n      class=\"field-select__select\"\n      :name=\"alias\"\n      :id=\"`field-${alias}`\"\n      :readonly=\"readonly\"\n      v-model=\"field.value.value\"\n      @blur=\"field.handleBlur\"\n      @change=\"publish\"\n    >\n      <option :value=\"null\" disabled>{{ $t('ui.fields.select.choose') }}</option>\n      <option v-for=\"option in options\" :key=\"option.value\" :value=\"option.value\">\n        {{ option.option }}\n      </option>\n    </select>\n    <small v-if=\"field.errors.value.length < 1\" class=\"field-select__description\">\n      <slot name=\"description\">{{ description }}</slot>\n    </small>\n    <small v-else class=\"field-select__error\">{{ field.errors.value[0] }}</small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, toRef, type PropType } from 'vue';\nimport IconDisplay from '../../icon-display/IconDisplay.vue';\nimport { useField, type ValidationResult } from 'vee-validate';\n\n/**\n * Renders a select field together with a label, description and validation.\n */\nexport default defineComponent({\n  name: 'FieldSelect',\n  components: {\n    IconDisplay,\n  },\n  data() {\n    return {\n      currentValidation: null as null | Promise<void | ValidationResult>,\n    };\n  },\n  emits: ['update:value'],\n  setup(props) {\n    // Create Ref on alias. This is important because vee-validate needs to know if the field name\n    // changes.\n    const alias = toRef(props, 'alias');\n    const name = toRef(props, 'name');\n\n    // Create Field\n    return {\n      field: useField<string>(alias, props.rules, {\n        label: name,\n        initialValue: props.value,\n      }),\n    };\n  },\n  watch: {\n    value(value) {\n      this.field.setValue(value);\n    },\n  },\n  props: {\n    /**\n     * The name of the field in kebab-case.\n     */\n    alias: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The human readable name of the field.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label above the field.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    /**\n     * An array of options in this form: `{ value: string, option: string }`.\n     */\n    options: {\n      type: Array as () => { option: string; value: string }[],\n      required: true,\n    },\n    /**\n     * A set of vee-validate rules.\n     */\n    rules: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      required: true,\n    },\n    /**\n     * The description below the field.\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    publish(): void {\n      this.currentValidation = this.field.validate().then((result: ValidationResult) => {\n        this.currentValidation = null;\n        if (result.valid && this.field.value.value !== null) {\n          this.$emit('update:value', this.field.value.value);\n        } else {\n          this.$emit('update:value', '');\n        }\n      });\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.field-select {\n  position: relative;\n}\n\n.field-select__label {\n  display: block;\n  margin-bottom: 0.5rem;\n  transition: color 0.2s ease-out;\n}\n\n.field-select--invalid .field-select__label {\n  color: $theme-negative-background;\n}\n\n.field-select__icon {\n  position: absolute;\n  color: $theme-neutral-text;\n  margin-top: 1.25em;\n  pointer-events: none;\n  right: 1em;\n  [dir='rtl'] & {\n    right: unset;\n    left: 1em;\n  }\n}\n\n.field-select__select {\n  box-shadow: $shadow-normal;\n  border-radius: $border-radius;\n  transition: box-shadow 0.2s ease-out;\n  appearance: none;\n  background-color: $theme-neutral-background;\n  color: $theme-neutral-text;\n  border: 1px solid $theme-neutral-border;\n  padding: 1em;\n  cursor: pointer;\n  transition: all 0.2s ease-out;\n  display: block;\n  width: 100%;\n  &:hover {\n    box-shadow: $shadow-hover;\n  }\n  &:focus {\n    outline: 0;\n    box-shadow: $shadow-focus;\n  }\n}\n\n.field-select__description {\n  display: block;\n  margin-top: 0.5rem;\n  font-style: italic;\n  color: #999;\n}\n\n.field-select__error {\n  display: inline-block;\n  margin-top: 0.5em;\n  border-radius: $border-radius;\n  padding: 0.35em 0.5em;\n  background-color: $theme-negative-background;\n  color: $theme-negative-text;\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      'field-switch': true,\n      'field-switch--invalid': field.errors.value.length > 0,\n      'field-switch--valid': field.errors.value.length <= 0 && field.meta.dirty,\n    }\"\n  >\n    <label :for=\"alias\" class=\"field-switch__label\">\n      {{ label }}\n    </label>\n    <div class=\"field-switch__radio-group\">\n      <div v-for=\"button in options\" :key=\"button.value\" class=\"field-switch__radio-button\">\n        <input\n          class=\"field-switch__input\"\n          type=\"radio\"\n          :name=\"alias\"\n          :id=\"`field-${alias}-${button.value}`\"\n          :value=\"button.value\"\n          :readonly=\"readonly\"\n          v-model=\"field.value.value\"\n          @change=\"publish\"\n        />\n        <label class=\"field-switch__button\" :for=\"`field-${alias}-${button.value}`\">\n          {{ button.option }}\n        </label>\n      </div>\n    </div>\n    <small v-if=\"field.errors.value.length < 1\" class=\"field-switch__description\">\n      <slot name=\"description\">{{ description }}</slot>\n    </small>\n    <small v-else class=\"field-switch__error\">{{ field.errors.value[0] }}</small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, toRef, type PropType } from 'vue';\nimport { useField, type ValidationResult } from 'vee-validate';\n\n/**\n * Renders a radio group but in a switch-like design.\n */\nexport default defineComponent({\n  name: 'FieldSwitch',\n  data() {\n    return {\n      currentValidation: null as null | Promise<void | ValidationResult>,\n    };\n  },\n  emits: ['update:value'],\n  setup(props) {\n    // Create Ref on alias. This is important because vee-validate needs to know if the field name\n    // changes.\n    const alias = toRef(props, 'alias');\n    const name = toRef(props, 'name');\n\n    // Create Field\n    return {\n      field: useField<string>(alias, props.rules, {\n        label: name,\n        type: 'radio',\n        initialValue: props.value,\n      }),\n    };\n  },\n  watch: {\n    value(value: string): void {\n      this.field?.setValue(value);\n    },\n  },\n  props: {\n    /**\n     * The name of the field in kebab-case.\n     */\n    alias: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The human readable name of the field.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label above the field.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    /**\n     * An array of options in this form: `{ value: string, option: string }`.\n     */\n    options: {\n      type: Array as () => { value: string; option: string }[],\n      required: true,\n    },\n    /**\n     * A set of vee-validate rules.\n     */\n    rules: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      required: true,\n    },\n    /**\n     * The description below the field.\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    publish(): void {\n      this.currentValidation = this.field.validate().then((result: ValidationResult) => {\n        this.currentValidation = null;\n        if (result.valid && this.field.value.value !== null) {\n          this.$emit('update:value', this.field.value.value);\n        } else {\n          this.$emit('update:value', '');\n        }\n      });\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.field-switch__label {\n  display: block;\n  margin-bottom: 0.5rem;\n  transition: color 0.2s ease-out;\n}\n\n.field-switch--invalid .field-switch__label {\n  color: $theme-negative-background;\n}\n\n.field-switch__radio-group {\n  box-shadow: $shadow-normal;\n  border-radius: $border-radius;\n  transition: box-shadow 0.2s ease-out;\n  &:hover {\n    box-shadow: $shadow-hover;\n  }\n  &:focus-within {\n    box-shadow: $shadow-focus;\n  }\n}\n\n.field-switch__input {\n  position: absolute;\n  left: -10000px;\n  top: auto;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  &:checked + .field-switch__button {\n    background-color: $theme-primary-background;\n    color: $theme-primary-text;\n    border-left-color: $theme-primary-border;\n    border-right-color: $theme-primary-border;\n  }\n}\n\n.field-switch__button {\n  display: block;\n  padding: 1em;\n  margin: 0;\n  cursor: pointer;\n  background-color: $theme-neutral-background;\n  color: $theme-neutral-text;\n  border: 1px solid $theme-neutral-border;\n  text-align: center;\n  transition: all 0.2s ease-out;\n  &:hover,\n  &:focus {\n    filter: brightness(1.025);\n  }\n}\n\n.field-switch__radio-button {\n  &:first-child {\n    .field-switch__input:checked + .field-switch__button {\n      border-top-color: $theme-primary-border;\n    }\n    .field-switch__button {\n      border-radius: $border-radius $border-radius 0 0;\n    }\n  }\n  &:last-child {\n    .field-switch__input:checked + .field-switch__button {\n      border-bottom-color: $theme-primary-border;\n    }\n    .field-switch__button {\n      border-radius: 0 0 $border-radius $border-radius;\n    }\n  }\n  & + & .field-switch__button {\n    border-top: 0;\n  }\n}\n\n.field-switch__description {\n  display: block;\n  margin-top: 0.5rem;\n  font-style: italic;\n  color: #999;\n}\n\n.field-switch__error {\n  display: inline-block;\n  margin-top: 0.5em;\n  border-radius: $border-radius;\n  padding: 0.35em 0.5em;\n  background-color: $theme-negative-background;\n  color: $theme-negative-text;\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      'field-textarea': true,\n      'field-textarea--invalid': field.errors.value.length > 0,\n      'field-textarea--valid': field.errors.value.length <= 0 && field.meta.dirty,\n    }\"\n  >\n    <label :for=\"alias\" class=\"field-textarea__label\">\n      {{ label }}\n    </label>\n    <textarea\n      class=\"field-textarea__textarea\"\n      :name=\"alias\"\n      :id=\"`field-${alias}`\"\n      :placeholder=\"placeholder\"\n      :readonly=\"readonly\"\n      v-model=\"field.value.value\"\n      @blur=\"publish\"\n      @change=\"field.handleChange\"\n    />\n    <small v-if=\"field.errors.value.length < 1\" class=\"field-textarea__description\">\n      <slot name=\"description\">{{ description }}</slot>\n    </small>\n    <small v-else class=\"field-textarea__error\">{{ field.errors.value[0] }}</small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, toRef, type PropType } from 'vue';\nimport { useField, type ValidationResult } from 'vee-validate';\n\n/**\n * Renders a textarea together with a label, description and validation.\n */\nexport default defineComponent({\n  name: 'FieldTextarea',\n  data() {\n    return {\n      currentValidation: null as null | Promise<void | ValidationResult>,\n    };\n  },\n  emits: ['update:value'],\n  setup(props) {\n    // Create Ref on alias. This is important because vee-validate needs to know if the field name\n    // changes.\n    const alias = toRef(props, 'alias');\n    const name = toRef(props, 'name');\n\n    // Create Field\n    return {\n      field: useField<string>(alias, props.rules, {\n        label: name,\n        initialValue: props.value,\n      }),\n    };\n  },\n  watch: {\n    value(value: string): void {\n      this.field.setValue(value);\n    },\n  },\n  props: {\n    /**\n     * The name of the field in kebab-case.\n     */\n    alias: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The human readable name of the field.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label above the field.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    /**\n     * A set of vee-validate rules.\n     */\n    rules: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      required: true,\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The description below the field.\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    publish(): void {\n      this.field.handleBlur();\n      this.currentValidation = this.field.validate().then((result: ValidationResult) => {\n        this.currentValidation = null;\n        if (result.valid && this.field.value.value !== null) {\n          this.$emit('update:value', this.field.value.value);\n        } else {\n          this.$emit('update:value', '');\n        }\n      });\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.field-textarea__label {\n  display: block;\n  margin-bottom: 0.5rem;\n  transition: color 0.2s ease-out;\n}\n\n.field-textarea--invalid .field-textarea__label {\n  color: $theme-negative-background;\n}\n\n.field-textarea__textarea {\n  padding: 0.5rem;\n  border-radius: 3px;\n  border: 1px solid #ddd;\n  display: block;\n  font-size: 1.4rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: border-color 0.2s ease-out;\n  &:hover {\n    border-color: $theme-neutral-border;\n  }\n  &:focus {\n    outline: none;\n    border-color: #999;\n  }\n  &::placeholder {\n    font-style: italic;\n    color: #ccc;\n  }\n}\n\n.field-textarea--invalid .field-textarea__textarea {\n  border-color: $theme-negative-border;\n}\n\n.field-textarea__description {\n  display: inline-block;\n  margin-top: 0.5em;\n  font-style: italic;\n  color: #999;\n}\n\n.field-textarea__error {\n  display: inline-block;\n  margin-top: 0.5em;\n  border-radius: $border-radius;\n  padding: 0.35em 0.5em;\n  background-color: $theme-negative-background;\n  color: $theme-negative-text;\n}\n</style>\n"],"names":["defineComponent","_hoisted_1","_openBlock","_createElementBlock","_Fragment","_renderList","_createElementVNode","_toDisplayString","_resolveComponent","_createBlock","_hoisted_2","_hoisted_3","_resolveDynamicComponent","_normalizeClass","_withCtx","_createVNode","_createCommentVNode","ref","useScrollLock","_hoisted_5","_hoisted_6","_Transition","_hoisted_4","_mergeProps","_withModifiers","toRef","useField","_withDirectives","_vModelDynamic","_renderSlot","_vModelSelect","_vModelRadio","_vModelText"],"mappings":";EAoBA,EAAeA,kBAAgB,CAC7B,KAAM,gBACN,MAAO,CAIL,MAAO,CACL,KAAM,MACN,SAAU,EACZ,EAKA,UAAW,CACT,KAAM,QACN,QAAS,EACX,CACF,CACF,CAAC,gIArCG,EAQU,EAAA,EAAA,EAAA,EAAA,2CARV,MAQUC,EAAA,CAAAC,GAAAA,UANF,EAAK,EAAKC,EAAA,mBAAAC,WAAA,KAAAC,EAAA,WAAA,EAAA,MAAA,CAAA,EAAA,IACXH,GAAA,UAAA,EAAuBC,EAAA,mBAAA,UAAA,CAC3B,IAAI,EAAE,MAAA,MAAA,uBAEP,KAAqC,EAAA,WAAA,IAAA,CAAA,EACrC,CAAAG,EAAA,mBAAA,UAAA,KAAAC,EAAAA,gBAAA,EAAA,OAAA,EAAA,CAAA,gpBCAN,KAAA,GAAeP,kBAAgB,CAC7B,KAAM,cACN,MAAO,CAIL,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EAIA,UAAW,CACT,KAAM,QACN,QAAS,EACX,EAIA,SAAU,CACR,KAAM,QACN,QAAS,EACX,CACF,CACF,CAAC,0BAjCiG,KAAA,GAAAQ,mBAAA,iBAAA,QAApDN,GAAO,UAAA,EAAAO,EAAA,YAAA,EAAA,CAAE,YAAW,EAAE,IAAA,EAAY,MAAM,OAAA,cAAA,EAAA,ooBCmDtF,KAAA,GAAeT,kBAAgB,CAC7B,KAAM,aACN,WAAY,CACV,aACF,EACA,MAAO,CAAC,OAAO,EACf,MAAO,CAIL,IAAK,CACH,KAAM,OACN,QAAS,SACT,UAAW,AAAC,GAAkB,CAAC,SAAU,GAAG,EAAE,SAAS,CAAK,CAC9D,EAIA,KAAM,CACJ,KAAM,OACN,QAAS,IACX,EAIA,KAAM,CACJ,KAAM,OACN,QAAS,SACT,UAAW,AAAC,GAAkB,CAAC,SAAU,SAAU,OAAO,EAAE,SAAS,CAAK,CAC5E,EAIA,MAAO,CACL,KAAM,OAGN,QAAS,UACT,UAAW,AAAC,GACV,CACE,UACA,WACA,UACA,WACA,QACA,eACA,aAAA,EACA,SAAS,CAAK,CACpB,EAIA,KAAM,CACJ,KAAM,OACN,QAAS,SACT,UAAW,AAAC,GAAkB,CAAC,QAAS,SAAU,OAAO,EAAE,SAAS,CAAK,CAC3E,EACA,UAAW,CACT,KAAM,OACN,QAAS,SACT,UAAW,AAAC,GAAkB,CAAC,OAAQ,QAAQ,EAAE,SAAS,CAAK,CACjE,EAIA,KAAM,CACJ,KAAM,OACN,QAAS,EACX,EAIA,MAAO,CACL,KAAM,OACN,QAAS,EACX,EAIA,OAAQ,CACN,KAAM,OACN,QAAS,OACX,EACA,SAAU,CACR,KAAM,QACN,QAAS,EACX,EACA,SAAU,CACR,KAAM,OACN,QAAS,CACX,CACF,EACA,SAAU,CACR,SAAU,CACR,KAAM,GAAU,CACd,sBAAsB,KAAK,QAC3B,qBAAqB,KAAK,OAC1B,2BAA2B,KAAK,WAAA,EAElC,MAAI,MAAK,UACP,EAAQ,KAAK,uBAAuB,EAE/B,CACT,CACF,EACA,QAAS,CACP,QAAQ,EAAmB,CACzB,GAAI,KAAK,SAAU,CACjB,EAAM,eAAe,EACrB,MACF,CACI,AAAA,KAAK,MAAQ,UACf,EAAM,eAAe,EAElB,KAAA,MAAM,QAAS,CAAK,CAC3B,CACF,CACF,CAAC,QA7JqBC,EAAM,CAAA,IAAA,kCAGIS,EAAM,CAAA,IAAA,gCAGfC,EAAM,CAAA,IAAA,2DAjB3B,KAAA,GAAAH,mBAoBY,aAnBL,EAGJ,MAAAN,GAAAA,UAAkB,EAAAO,EAAA,YAAAG,EAAA,wBAAA,EAAA,GAAA,EAAA,CAClB,MAAAC,EAAAA,eAAkB,eAAQ,EAAQ,OAAA,CAAA,EAClC,SAAM,EAAG,SACT,SAAM,EAAG,SAAgB,GAAA,EAAA,SACzB,KAAM,EAAE,MAAG,IAAW,EAAA,KAAA,OACtB,OAAO,MAAO,SAAA,EAAA,KAAA,OAAA,OAAA,EAAA,MAAA,IAAA,EAAA,OAAA,2BAEf,QAAAC,EAAA,QAAA,IAAA,CAAA,EACE,oBAAwBX,EAAAA,mBAAA,OAAAF,EAAA,CAAAc,EAAAA,YAAE,EAAS,CAAA,KAAA,EAAA,oCAErC,GAAAC,EAAAA,mBAAA,GAAA,EAAA,EACE,EAAA,OAAA,QAAAd,GAAAA,UAAA,EAAAC,EAAA,mBAAA,OAAAO,EAAA,kCAEF,GAAAM,EAAAA,mBAAA,GAAA,EAAA,EAAA,EACE,qBAAyBb,EAAAA,mBAAA,OAAAQ,EAAA,CAAAI,EAAAA,YAAE,EAAS,CAAA,KAAA,EAAA,w7DCqC1C,KAAA,GAAef,kBAAgB,CAC7B,KAAM,YAEN,WAAY,CACV,aACA,aACF,EACA,OAAQ,CACA,KAAA,GAAUiB,MAAwB,IAAI,EACrC,MAAA,CACL,SAAUC,gBAAc,CAAO,CAAA,CAEnC,EACA,MAAO,CAIL,QAAS,CACP,KAAM,QACN,QAAS,EACX,EAKA,QAAS,CACP,KAAM,OACN,SAAU,EACZ,EAKA,YAAa,CACX,KAAM,MACR,EAMA,QAAS,CACP,KAAM,MACN,QAAS,IACX,EAKA,KAAM,CACJ,KAAM,OACN,QAAS,IACX,EAKA,MAAO,CACL,KAAM,OACN,QAAS,SACT,UAAW,AAAC,GAAkB,CAAC,OAAQ,SAAU,SAAU,MAAM,EAAE,SAAS,CAAK,CACnF,EAKA,UAAW,CACT,KAAM,QACN,QAAS,EACX,CACF,EACA,SAAU,CACH,KAAA,OAAO,UAAW,AAAC,GAAqB,CAC3C,KAAK,SAAW,CAAA,CACjB,CACH,EACA,SAAU,CACR,SAAoB,CAClB,KAAM,GAAU,CAAC,gBAAgB,KAAK,OAAO,EAC7C,MAAI,MAAK,WACP,EAAQ,KAAK,mBAAmB,EAE3B,CACT,EACA,eAAkD,CACzC,MAAA,CACL,CACE,QAAS,KAAK,GAAG,eAAe,EAChC,MAAO,UACP,UAAW,OACb,CAAA,CAEJ,CACF,CACF,CAAC,0DAzIcP,EAAM,CAAA,IAAA,oDAKaQ,EAAM,CAAA,IAAA,8BAIAC,EAAU,CAAC,IAAK,EAAA,IAAA,iIArBtDZ,mBAsCa,YAAA,EAtCY,MAAAN,GAAA,UAAA,EAAoCO,EAAA,YAAAY,aAAA,CAAA,KAAA,OAqCrD,SAAA,CAAA,MAAA,IAAA,MAAA,GAAA,CAAA,EAAA,CApCN,QAAAP,EAAA,QAAA,IAAA,CAAA,EAAA,QAAAZ,GAAAA,YAGUC,EAAAA,mBAAA,MAAA,CACR,IAAI,EACJ,uBAAgB,CAAgB,QAAA,EAAA,OAAA,CAAA,EAChC,KAAA,SAAA,kBAAA,iBAEA,mBA2BM,oBAAA,EAAA,sBA1BO,MAAgBF,EAAA,CAAOK,EAAAA,mBAAA,MAAA,CAAA,MAAA,iBAClC,QAAA,EAAA,OAAA,GAwBM,AAAA,GAAA,EAAA,MAAA,OAAA,EAAA,CAAA,EAvBJA,EAAA,mBAAA,MAAAI,EAAA,CACuF,EAAA,QAAAR,GAAA,UAAA,EAAAC,EAAAA,mBAAA,MAAAQ,EAAA,CAAA,EAAA,KAAAT,GAAAA,YAAjDO,EAAAA,YAAA,EAAA,CAAE,IAAK,EAAgB,KAAM,EAAA,KAAA,MAAA,qCAG5D,KAAA,EAAA,CAAA,OAAA,MAFL,IAGSO,EAAAA,mBAAW,GAAA,EAAA,EAAAV,EAAA,mBAApB,KAEIgB,EAAAf,EAAAA,gBAAA,EAAA,OAAA,EAAA,CAAA,EAAA,EAAA,YAAAL,GAAA,UAAA,EAAAC,EAAAA,mBAAA,IAAAgB,EAAAZ,EAAAA,gBAAA,EAAA,WAAA,EAAA,CAAA,GAAAS,EAAAA,mBAAA,GAAA,EAAA,EAEN,GAAAA,EAAAA,mBAAA,GAAA,EAAA,EACE,EAAA,OAAA,QAAAd,GAAAA,UAAA,EAAAC,EAAA,mBAAA,MAAAiB,EAAA,iCAGA,EAAA,GAAA,GAAAJ,qBAAA,GAAA,EAAA,EAQaV,EAAA,mBAAA,MAAA,EAAA,CAAAJ,GAAAA,UANL,EAAO,EAASC,EAAA,mBAAAC,EAAA,SAAA,KAAAC,aAAA,EAAA,SAAA,EAAA,cAAA,AAAA,GACdH,aAAM,EAAAO,cAAA,EAAAc,EAAAA,WAAA,CACd,IAAK,EAAC,SAAA,EACL,EAAK,CAAA,MAAA,gBAEc,QAAA,AAAA,IAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAA,IAAA,CAAA,CAAA,CAAA,EAAA;2pBCwDlC,KAAA,GAAevB,kBAAgB,CAC7B,KAAM,cACN,WAAY,CACV,cACA,WACF,EACA,MAAO,CAAC,QAAS,UAAW,OAAO,EACnC,MAAO,CACE,MAAA,CACL,OAAQ,OACR,MAAO,KACP,aAAc,IAAA,CAElB,EACA,MAAO,CAKL,OAAQ,CACN,KAAM,SACN,SAAU,EACZ,EAIA,KAAM,CACJ,KAAM,OACN,QAAS,SACT,UAAW,AAAC,GAAkB,CAAC,SAAU,SAAU,OAAO,EAAE,SAAS,CAAK,CAC5E,EAIA,MAAO,CACL,KAAM,OACN,QAAS,UACT,UAAW,AAAC,GACV,CACE,UACA,WACA,UACA,WACA,QACA,eACA,aAAA,EACA,SAAS,CAAK,CACpB,EAIA,KAAM,CACJ,KAAM,OACN,QAAS,SACT,UAAW,AAAC,GAAkB,CAAC,QAAS,SAAU,OAAO,EAAE,SAAS,CAAK,CAC3E,EACA,UAAW,CACT,KAAM,OACN,QAAS,SACT,UAAW,AAAC,GAAkB,CAAC,OAAQ,QAAQ,EAAE,SAAS,CAAK,CACjE,EAIA,KAAM,CACJ,KAAM,OACN,QAAS,EACX,EAIA,MAAO,CACL,KAAM,OACN,QAAS,EACX,EACA,SAAU,CACR,KAAM,QACN,QAAS,EACX,EACA,SAAU,CACR,KAAM,OACN,QAAS,CACX,CACF,EACA,SAAU,CACR,SAAoB,CAClB,KAAM,GAAU,CACd,uBAAuB,KAAK,QAC5B,sBAAsB,KAAK,OAC3B,4BAA4B,KAAK,WAAA,EAEnC,MAAI,MAAK,gBACP,EAAQ,KAAK,wBAAwB,EAEhC,CACT,EACA,gBAA0B,CACjB,MAAA,MAAK,UAAY,KAAK,SAAW,SAC1C,CACF,EACA,QAAS,CACP,QAAQ,EAAmB,CACpB,KAAA,MAAM,QAAS,CAAK,EACzB,KAAK,OAAS,UACd,KAAK,OAAO,EAAE,KACZ,AAAC,GAAW,CACV,KAAK,OAAS,UACT,KAAA,MAAM,UAAW,CAAM,EAC5B,KAAK,oBAAoB,CAC3B,EACA,AAAC,GAAiB,CAChB,KAAK,OAAS,QACT,KAAA,MAAM,QAAS,CAAK,EACzB,KAAK,MAAQ,EAAM,QACnB,KAAK,oBAAoB,CAAA,CAE7B,CACF,EACA,oBAAoB,EAAQ,IAAM,CAChC,AAAI,KAAK,cACP,aAAa,KAAK,YAAY,EAE3B,KAAA,aAAe,WAAW,IAAM,CACnC,KAAK,OAAS,QACb,CAAK,CACV,CACF,CACF,CAAC,yCAxMcU,EAAY,CAAA,IAAA,gBAoBOC,EAAM,CAAA,IAAA,qGAnCtCH,mBAuDM,WAAA,EArDF,MAAAN,oCAAoB,MACZ,KAAA,CACGI,EAAAA,mBAAA,SAAA,CACV,MAAAO,EAAAA,eAAU,gBAAsB,EAAQ,OAAA,CAAA,EACxC,SAAM,EAAI,eACV,SAAK,EAAA,eAAA,GAAA,EAAA,SAAA,KAAA,EAAA,KAGE,QAAA,EAAQ,IAAK,GAAA,GAAAW,EAAA,cAAA,AAAA,GAAA,EAAA,QAAA,CAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CACb,EAAA,MAAA,EAAA,MAAAtB,GAAAA,UAAA,EAAAC,EAAA,mBAAA,OAAA,CAAA,IAAA,EAEN,MAAAU,EAAA,eAoBa,CApBU,qBAAA,uBAAA,EAAA,KAAA,OAAA,SAAA,CAAA,CAAA,EAAA,eAEGQ,EAAM,WAAA,CAAA,KAAA,MAAA,EAAA,CAA9B,QAAAP,EAAA,QAAA,IAAA,CAAA,EACE,gCAA0B,EAAAX,EAAA,mBAAA,MAAAO,EAAA,CAAAK,EAAAA,YAAK,EAAc,CAAC,IAAI,UAAS,IAAA,eAAU,KAAA,QAAA,UAAA,gBAKpD,KAAA,GAAA,CAAA,CAFjB,GAAA,EAAA,SAAI,uBACc,EAAAN,EAAA,YAAA,EAAA,CAElB,IAAI,UACJ,IAAA,eAAA,KAAA,QAKW,UAAM,EAAA,EAFjB,KAAA,GAAA,GAAA,EAAA,SAAW,uBACKA,EAAA,YAAA,EAAA,CAEhB,IAAI,QACJ,IAAA,aAAA,KAAA,oBAEW,EAAA,KAAI,qBAAiBA,EAAAA,YAAA,EAAA,CAAS,IAAI,OAAuB,IAAA,OAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,6CAG1E,EAAA,CAAA,GAAAO,qBAAA,GAAA,EAAA,EACE,EAAA,OAAA,QAAAd,GAAAA,UAAA,EAAAC,EAAA,mBAAA,OAAAQ,EAAA,qCAGJK,EAAAA,mBAeY,GAAA,EAAA,CAAA,EAdT,GAASf,CAAA,EAAAc,EAAAA,YACA,EAAE,CACZ,QAAK,EAAO,QAAA,KACZ,QAAM,EAAM,GAAA,+BAAA,EACX,KAAA,QAAA,MAAA,oGAOA,CAAA,EAEU,QAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,KAAA,EAAA;;;+zCChBjB,KAAA,GAAef,kBAAgB,CAC7B,KAAM,aACN,MAAO,CACE,MAAA,CACL,kBAAmB,IAAA,CAEvB,EACA,MAAO,CAAC,cAAc,EACtB,MAAM,EAAO,CAGL,KAAA,GAAQyB,EAAAA,MAAM,EAAO,OAAO,EAC5B,EAAOA,EAAAA,MAAM,EAAO,MAAM,EAGzB,MAAA,CACL,MAAOC,EAAA,SAAiB,EAAO,EAAM,MAAO,CAC1C,MAAO,EACP,KAAM,EAAM,KACZ,aAAc,EAAM,KAAA,CACrB,CAAA,CAEL,EACA,MAAO,CACL,MAAM,EAAqB,CACpB,KAAA,MAAM,SAAS,CAAK,CAC3B,CACF,EACA,MAAO,CAIL,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EAIA,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EAIA,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EAIA,KAAM,CACJ,KAAM,OACN,SAAU,GACV,UAAW,AAAC,GACH,CAAC,QAAS,OAAQ,SAAU,WAAY,MAAO,OAAQ,KAAK,EAAE,SAAS,CAAK,CAEvF,EACA,MAAO,CACL,KAAM,OACN,QAAS,IACX,EAIA,MAAO,CACL,KAAM,CAAC,OAAQ,MAAM,EACrB,SAAU,EACZ,EACA,YAAa,CACX,KAAM,OACN,QAAS,EACX,EAIA,YAAa,CACX,KAAM,OACN,QAAS,EACX,EACA,aAAc,CACZ,KAAM,OACN,QAAS,MACX,EACA,SAAU,CACR,KAAM,QACN,QAAS,EACX,CACF,EACA,QAAS,CACP,SAAgB,CACd,KAAK,MAAM,aACX,KAAK,kBAAoB,KAAK,MAAM,WAAW,KAAK,AAAC,GAA6B,CAChF,KAAK,kBAAoB,KACzB,AAAI,EAAO,OAAS,KAAK,MAAM,MAAM,QAAU,KAC7C,KAAK,MAAM,eAAgB,KAAK,MAAM,MAAM,KAAK,EAE5C,KAAA,MAAM,eAAgB,EAAE,CAC/B,CACD,CACH,CACF,CACF,CAAC,iFAvH+Cf,EAAM,CAAA,IAAA,oCAGpCW,EAAM,CAAA,IAAA,8BAxBd,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,uNAMN,CAAA,CAAA,EAAA,sBAA0B,QAAoB,CAAA,IAAA,EAAA,gCAI5C,EAAAf,EAAA,gBAAM,EAAoB,KAAA,EAAA,EAAAN,CAAA,EAAA0B,EAAA,eACnBrB,EAAI,mBAAA,QAAA,CACV,MAAM,qBACN,KAAE,EAAA,KACF,KAAW,EAAA,MACX,YAAY,EAAE,QACd,YAAU,EAAA,YAAA,aAAA,EAAA,aAEV,SAAI,EAAA,SACJ,sBAAM,EAAQ,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,MAAN,MAAK,GAAA,OAAA,EAAA,IAAA,GAAA,GAAA,IAAA,IAAA,EAAA,SAAA,EAAA,QAAA,GAAA,CAAA,GAFL,SAAA,EAAA,IAAA,GAAM,GAAM,IAAK,IAAA,EAAA,MAAA,cAAA,EAAA,MAAA,aAAA,GAAA,CAAA,EAAA,EAAA,KAAA,GAAAI,CAAA,EAAA,CAIf,CAAakB,EAAA,cAAA,EAAK,MAAC,MAAM,KAAA,CAAA,CAAA,EACpC,EAAA,MAAA,OAAiD,2DAArBjB,EAAW,CAAAkB,EAAAA,WAAA,EAAA,OAAA,cAAA,CAAA,EAAA,IAAA;8lCCiB7C,KAAA,GAAe7B,kBAAgB,CAC7B,KAAM,cACN,WAAY,CACV,aACF,EACA,MAAO,CACE,MAAA,CACL,kBAAmB,IAAA,CAEvB,EACA,MAAO,CAAC,cAAc,EACtB,MAAM,EAAO,CAGL,KAAA,GAAQyB,EAAAA,MAAM,EAAO,OAAO,EAC5B,EAAOA,EAAAA,MAAM,EAAO,MAAM,EAGzB,MAAA,CACL,MAAOC,EAAA,SAAiB,EAAO,EAAM,MAAO,CAC1C,MAAO,EACP,aAAc,EAAM,KAAA,CACrB,CAAA,CAEL,EACA,MAAO,CACL,MAAM,EAAO,CACN,KAAA,MAAM,SAAS,CAAK,CAC3B,CACF,EACA,MAAO,CAIL,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EAIA,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EAIA,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EACA,MAAO,CACL,KAAM,OACN,QAAS,IACX,EAIA,QAAS,CACP,KAAM,MACN,SAAU,EACZ,EAIA,MAAO,CACL,KAAM,CAAC,OAAQ,MAAM,EACrB,SAAU,EACZ,EAIA,YAAa,CACX,KAAM,OACN,QAAS,EACX,EACA,SAAU,CACR,KAAM,QACN,QAAS,EACX,CACF,EACA,QAAS,CACP,SAAgB,CACd,KAAK,kBAAoB,KAAK,MAAM,WAAW,KAAK,AAAC,GAA6B,CAChF,KAAK,kBAAoB,KACzB,AAAI,EAAO,OAAS,KAAK,MAAM,MAAM,QAAU,KAC7C,KAAK,MAAM,eAAgB,KAAK,MAAM,MAAM,KAAK,EAE5C,KAAA,MAAM,eAAgB,EAAE,CAC/B,CACD,CACH,CACF,CACF,CAAC,mBAlHchB,GAAW,CAAA,OAAA,KAAA,UAAA,EAAEC,GAAQ,CAAA,MAAA,+BAKYQ,GAAM,CAAA,IAAA,qCAGpCC,GAAM,CAAA,IAAA,gEA5BtBZ,mBA6BM,aAAA,2NAtBJ,CAAA,CAAA,EAAA,CAA0BF,EAAAA,mBAAA,QAAA,CAAA,IAAA,EAAA,MAG1B,MAAA,qBAAA,EAAaC,EAAiB,gBAAA,EAAA,KAAA,EAAA,EAAAN,EAAA,EAAAc,EAAAA,YAAO,EAAoB,CAAA,KAAA,2DAGhDT,EAAK,mBAAA,SAAA,CACX,MAAE,uBACF,KAAU,EAAA,MAAA,GAAA,SAAA,EAAA,QAEV,SAAI,EAAA,SACJ,sBAAM,eAAE,EAAO,MAAA,MAAA,MAAA,GAAA,OAAA,EAAA,IAAA,GAAA,GAAA,IAAA,IAAA,EAAA,MAAA,YAAA,EAAA,MAAA,WAAA,GAAA,CAAA,GAEhB,SAA2E,EAAA,IAAA,GAA3E,OAA2E,IAAvC,EAAA,SAAA,EAAA,QAAA,GAAA,CAAA,EAAA,EAAA,+BACpCK,GAESJ,EAAA,gBAAA,EAAA,GAAA,yBAAA,CAAA,EAAA,CAAA,EAAAL,aAF+B,EAAO,EAAKC,EAAAA,mBAAAC,EAAA,SAAA,KAAAC,EAAAA,WAAA,EAAA,QAAA,AAAA,GAAQH,GAAA,UAAA,EAAcC,EAAA,mBAAA,SAAA,CAAA,IAAA,EAAA,wEAI/D,CAAY2B,EAAA,aAAA,EAAC,MAAM,MAAM,KAAA,CAAA,CAAA,EACpC,EAAA,MAAA,OAAiD,2DAArBX,GAAW,CAAAU,EAAAA,WAAA,EAAA,OAAA,cAAA,CAAA,EAAA,IAAA,kxCCe7C,KAAA,GAAe7B,kBAAgB,CAC7B,KAAM,cACN,MAAO,CACE,MAAA,CACL,kBAAmB,IAAA,CAEvB,EACA,MAAO,CAAC,cAAc,EACtB,MAAM,EAAO,CAGL,KAAA,GAAQyB,EAAAA,MAAM,EAAO,OAAO,EAC5B,EAAOA,EAAAA,MAAM,EAAO,MAAM,EAGzB,MAAA,CACL,MAAOC,EAAA,SAAiB,EAAO,EAAM,MAAO,CAC1C,MAAO,EACP,KAAM,QACN,aAAc,EAAM,KAAA,CACrB,CAAA,CAEL,EACA,MAAO,CACL,MAAM,EAAqB,OACpB,QAAA,QAAA,QAAO,SAAS,EACvB,CACF,EACA,MAAO,CAIL,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EAIA,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EAIA,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EACA,MAAO,CACL,KAAM,OACN,QAAS,IACX,EAIA,QAAS,CACP,KAAM,MACN,SAAU,EACZ,EAIA,MAAO,CACL,KAAM,CAAC,OAAQ,MAAM,EACrB,SAAU,EACZ,EAIA,YAAa,CACX,KAAM,OACN,QAAS,EACX,EACA,SAAU,CACR,KAAM,QACN,QAAS,EACX,CACF,EACA,QAAS,CACP,SAAgB,CACd,KAAK,kBAAoB,KAAK,MAAM,WAAW,KAAK,AAAC,GAA6B,CAChF,KAAK,kBAAoB,KACzB,AAAI,EAAO,OAAS,KAAK,MAAM,MAAM,QAAU,KAC7C,KAAK,MAAM,eAAgB,KAAK,MAAM,MAAM,KAAK,EAE5C,KAAA,MAAM,eAAgB,EAAE,CAC/B,CACD,CACH,CACF,CACF,CAAC,yGA1G+C,GAAM,CAAA,IAAA,qCAGpC,GAAM,CAAA,IAAA,+BA7Bd,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,0NAMN,CAAA,CAAA,EAAA,CAA0BpB,EAAAA,mBAAA,QAAA,CAAA,IAAA,EAAA,MAG1B,MAAA,qBAAA,EAAAC,EAAA,gBAAA,EACE,KAcM,EAAA,EAAAN,EAAA,EAdNK,EAAA,mBAAA,MAAAI,GAAA,CAAAR,aAAqC,EAAO,EAAKC,EAAAA,mBAAAC,EAAA,SAAA,KAAAC,EAAAA,WAAA,EAAA,QAAA,AAAA,GAAOH,GAAA,UAAA,EAA6BC,EAAA,mBAAA,MAAA,CAAA,IAAA,EAAA,2CAGrEwB,EAAA,eAAArB,EAAA,mBAAA,QAAA,CACX,MAAM,sBACN,KAAE,QACF,KAAK,EAAE,MACP,YAAU,EAAQ,SAAA,EAAA,QAAA,MAAA,EAAA,MAElB,SAAM,EAAA,SAAA,sBAAA,EAAA,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,MAAA,MAAA,GADE,SAAA,EAAA,IAAA,GAAW,GAAC,IAAK,IAAA,EAAA,SAAA,EAAA,QAAA,GAAA,CAAA,EAAA,EAAA,KAAA,GAAAK,EAAA,EAAA,CAG5B,CAEQoB,EAAA,YAAA,EAAA,MAAA,MAAA,KAAA,CAAA,CAAA,uBAF2C,QAAK,CAAA,MAAA,8FAK/C,EAAA,GAAA,EAAA,CAAA,EACX,EAAA,MAAA,OAAiD,2DAArB,GAAW,CAAAF,EAAAA,WAAA,EAAA,OAAA,cAAA,CAAA,EAAA,IAAA,2vCCM7C,KAAA,GAAe7B,kBAAgB,CAC7B,KAAM,gBACN,MAAO,CACE,MAAA,CACL,kBAAmB,IAAA,CAEvB,EACA,MAAO,CAAC,cAAc,EACtB,MAAM,EAAO,CAGL,KAAA,GAAQyB,EAAAA,MAAM,EAAO,OAAO,EAC5B,EAAOA,EAAAA,MAAM,EAAO,MAAM,EAGzB,MAAA,CACL,MAAOC,EAAA,SAAiB,EAAO,EAAM,MAAO,CAC1C,MAAO,EACP,aAAc,EAAM,KAAA,CACrB,CAAA,CAEL,EACA,MAAO,CACL,MAAM,EAAqB,CACpB,KAAA,MAAM,SAAS,CAAK,CAC3B,CACF,EACA,MAAO,CAIL,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EAIA,KAAM,CACJ,KAAM,OACN,SAAU,EACZ,EAIA,MAAO,CACL,KAAM,OACN,SAAU,EACZ,EACA,MAAO,CACL,KAAM,OACN,QAAS,IACX,EAIA,MAAO,CACL,KAAM,CAAC,OAAQ,MAAM,EACrB,SAAU,EACZ,EACA,YAAa,CACX,KAAM,OACN,QAAS,EACX,EAIA,YAAa,CACX,KAAM,OACN,QAAS,EACX,EACA,SAAU,CACR,KAAM,QACN,QAAS,EACX,CACF,EACA,QAAS,CACP,SAAgB,CACd,KAAK,MAAM,aACX,KAAK,kBAAoB,KAAK,MAAM,WAAW,KAAK,AAAC,GAA6B,CAChF,KAAK,kBAAoB,KACzB,AAAI,EAAO,OAAS,KAAK,MAAM,MAAM,QAAU,KAC7C,KAAK,MAAM,eAAgB,KAAK,MAAM,MAAM,KAAK,EAE5C,KAAA,MAAM,eAAgB,EAAE,CAC/B,CACD,CACH,CACF,CACF,CAAC,6DAvG+C,GAAM,CAAA,IAAA,uCAGpC,GAAM,CAAA,IAAA,iCAtBd,YAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,gOAMN,CAAA,CAAA,EAAA,CAA0BpB,EAAAA,mBAAA,QAAA,CAAA,IAAA,EAAA,mCAIxB,EAAAC,EAAA,gBAAM,EAA0B,KAAA,EAAA,EAAA,EAAA,EAAAoB,EAAA,eACzBrB,EAAK,mBAAA,WAAA,CACX,MAAE,2BACF,KAAW,EAAA,MACX,GAAU,SAAA,EAAA,QAAA,YAAA,EAAA,YAEV,SAAI,EAAA,SACJ,sBAAM,EAAQ,IAAA,GAAA,GAAA,AAAA,GAAA,EAAA,MAAA,MAAN,MAAK,GAAA,OAAA,EAAA,IAAA,GAAA,GAAA,IAAA,IAAA,EAAA,SAAA,EAAA,QAAA,GAAA,CAAA,GAFL,SAAA,EAAA,OAAY,GAAK,IAAA,IAAA,EAAA,MAAA,cAAA,EAAA,MAAA,aAAA,GAAA,CAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,CAIf,CAAM0B,EAAA,WAAA,EAAO,MAAM,MAAM,KAAA,CAAA,CAAA,EACpC,EAAA,MAAA,OAAiD,2DAArB,GAAW,CAAAH,EAAAA,WAAA,EAAA,OAAA,cAAA,CAAA,EAAA,IAAA"}