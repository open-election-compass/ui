{"version":3,"file":"open-election-compass-ui.es.min.js","sources":["../src/components/accordion-list/AccordionList.vue","../src/components/icon-display/IconDisplay.vue","../src/components/base-button/BaseButton.vue","../src/components/modal-view/ModalView.vue","../src/components/async-button/AsyncButton.vue","../src/components/fields/input/FieldInput.vue","../src/components/fields/select/FieldSelect.vue","../src/components/fields/switch/FieldSwitch.vue","../src/components/fields/textarea/FieldTextarea.vue"],"sourcesContent":["<template>\n  <div class=\"accordion-list\">\n    <details\n      v-for=\"(item, index) in items\"\n      :key=\"item.alias\"\n      class=\"accordion-list__item\"\n      :open=\"openFirst && index === 0\"\n    >\n      <summary>{{ item.caption }}</summary>\n      <slot :name=\"item.alias\" />\n    </details>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\n/**\n * Renders an accordion using the elements details and summary.\n */\nexport default defineComponent({\n  name: 'AccordionList',\n  props: {\n    /**\n     * List of items, each with an alias used for the slot name and a caption used for the summary.\n     */\n    items: {\n      type: Array as () => { alias: string; caption: string }[],\n      required: true,\n    },\n\n    /**\n     * Wether to open the first item in the list by default.\n     */\n    openFirst: {\n      type: Boolean,\n      default: false,\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.accordion-list {\n  details {\n    background: $theme-neutral-background;\n    color: $theme-neutral-text;\n    overflow: hidden;\n    & + details {\n      border-top: 2px solid $theme-neutral-border;\n    }\n    &:first-of-type {\n      border-radius: $border-radius $border-radius 0 0;\n    }\n    &:last-of-type {\n      border-radius: 0 0 $border-radius $border-radius;\n    }\n    &[open] {\n      padding: 0 1rem 1rem 1rem;\n      summary {\n        margin: 0 -1rem;\n      }\n    }\n  }\n  summary {\n    font-weight: bold;\n    padding: 1em;\n    cursor: pointer;\n    user-select: none;\n    &:hover,\n    &:focus {\n      outline: 0;\n      text-decoration: underline;\n    }\n  }\n}\n\n@media (min-width: 40rem) {\n  .accordion-list {\n    details {\n      &[open] {\n        padding: 0 2rem 2rem 2rem;\n        summary {\n          margin: 0 -2rem;\n        }\n      }\n    }\n    summary {\n      padding: 2em;\n    }\n  }\n}\n</style>\n","<template>\n  <FontAwesomeIcon :icon=\"['fas', name]\" class=\"icon\" :fixed-width=\"monospace\" :spin=\"spinning\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n/**\n * A simple icon component to display free FontAwesome 5 icons.\n */\nexport default defineComponent({\n  name: 'IconDisplay',\n  props: {\n    /**\n     * The FontAwesome icon identifier (snake-case) to be used.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * Wether the width should be the same for all icons or individual.\n     */\n    monospace: {\n      type: Boolean,\n      default: true,\n    },\n    /**\n     * Make the icon spin constantly.\n     */\n    spinning: {\n      type: Boolean,\n      default: false,\n    },\n  },\n});\n</script>\n","<template>\n  <component\n    :is=\"tag\"\n    class=\"base-button\"\n    :class=\"classes\"\n    :disabled=\"disabled\"\n    :tabindex=\"disabled ? -1 : tabindex\"\n    :href=\"tag === 'a' ? href : undefined\"\n    :type=\"tag === 'button' ? type : undefined\"\n    :target=\"tag === 'a' ? target : undefined\"\n    @click=\"onClick\"\n  >\n    <span v-if=\"left\" class=\"base-button__left-icon\">\n      <IconDisplay :name=\"left\" monospace />\n    </span>\n    <span v-if=\"$slots.default\" class=\"base-button__caption\">\n      <slot />\n    </span>\n    <span v-if=\"right\" class=\"base-button__right-icon\">\n      <IconDisplay :name=\"right\" monospace />\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, type PropType } from 'vue';\nimport IconDisplay from '../icon-display/IconDisplay.vue';\n\nexport interface BaseButtonProps {\n  tag?: 'button' | 'a';\n  href?: string;\n  type?: 'button' | 'submit' | 'reset';\n  theme?:\n    | 'primary'\n    | 'positive'\n    | 'neutral'\n    | 'negative'\n    | 'white'\n    | 'primary-dark'\n    | 'transparent';\n  size?: 'small' | 'normal' | 'large';\n  textAlign?: 'left' | 'center';\n  left?: string;\n  right?: string;\n  target?: string;\n  disabled?: boolean;\n  tabindex?: number;\n}\n\n/**\n * Renders a basic button or a-tag with support for icons, themes and sizes.\n */\nexport default defineComponent({\n  name: 'BaseButton',\n  components: {\n    IconDisplay,\n  },\n  emits: ['click'],\n  props: {\n    /**\n     * The HTML tag to be used.\n     */\n    tag: {\n      type: String as PropType<'button' | 'a'>,\n      default: 'button',\n      validator: (value: string) => ['button', 'a'].includes(value),\n    },\n    /**\n     * The href attribute – only applies when tag is set to `a`.\n     */\n    href: {\n      type: String,\n      default: null,\n    },\n    /**\n     * The type of button – only applies when tag is set to `button`.\n     */\n    type: {\n      type: String as PropType<'button' | 'submit' | 'reset'>,\n      default: 'button',\n      validator: (value: string) => ['button', 'submit', 'reset'].includes(value),\n    },\n    /**\n     * The global theme to be used. Can indicate the purpose of the button.\n     */\n    theme: {\n      type: String as PropType<\n        'primary' | 'positive' | 'neutral' | 'negative' | 'white' | 'primary-dark' | 'transparent'\n      >,\n      default: 'primary',\n      validator: (value: string) =>\n        [\n          'primary',\n          'positive',\n          'neutral',\n          'negative',\n          'white',\n          'primary-dark',\n          'transparent',\n        ].includes(value),\n    },\n    /**\n     * The global size to be used.\n     */\n    size: {\n      type: String as PropType<'small' | 'normal' | 'large'>,\n      default: 'normal',\n      validator: (value: string) => ['small', 'normal', 'large'].includes(value),\n    },\n    textAlign: {\n      type: String as PropType<'left' | 'center'>,\n      default: 'center',\n      validator: (value: string) => ['left', 'center'].includes(value),\n    },\n    /**\n     * The FontAwesome icon to be displayed left of the caption.\n     */\n    left: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The FontAwesome icon to be displayed right of the caption.\n     */\n    right: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The link target – only applies when tag is set to `a`.\n     */\n    target: {\n      type: String,\n      default: '_self',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    tabindex: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    classes() {\n      const classes = [\n        `base-button--theme-${this.theme}`,\n        `base-button--size-${this.size}`,\n        `base-button--text-align-${this.textAlign}`,\n      ];\n      if (this.disabled) {\n        classes.push('base-button--disabled');\n      }\n      return classes;\n    },\n  },\n  methods: {\n    onClick(event: MouseEvent) {\n      if (this.disabled) {\n        event.preventDefault();\n        return;\n      }\n      if (this.tag === 'button') {\n        event.preventDefault();\n      }\n      this.$emit('click', event);\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.base-button {\n  font-weight: 500;\n  border: 0;\n  border-radius: $border-radius;\n  box-shadow: $shadow-normal;\n  appearance: none;\n  display: inline-flex;\n  flex-wrap: nowrap;\n  align-items: center;\n\n  &:hover {\n    outline: none;\n    box-shadow: $shadow-hover;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: $shadow-focus;\n  }\n\n  &.base-button--theme-primary:disabled,\n  &.base-button--theme-primary.base-button--disabled,\n  &.base-button--theme-positive:disabled,\n  &.base-button--theme-positive.base-button--disabled,\n  &.base-button--theme-neutral:disabled,\n  &.base-button--theme-neutral.base-button--disabled,\n  &.base-button--theme-negative:disabled,\n  &.base-button--theme-negative.base-button--disabled,\n  &.base-button--theme-white:disabled,\n  &.base-button--theme-white.base-button--disabled,\n  &.base-button--theme-primary-dark:disabled,\n  &.base-button--theme-primary-dark.base-button--disabled {\n    box-shadow: $shadow-normal !important;\n    cursor: default;\n    opacity: 0.35;\n  }\n  &.base-button--theme-transparent:disabled,\n  &.base-button--theme-transparent.base-button--disabled {\n    cursor: default;\n    opacity: 0.35;\n  }\n\n  &.base-button--theme-primary {\n    color: $theme-primary-text;\n    background-color: $theme-primary-background;\n    border: 1px solid $theme-primary-border;\n  }\n\n  &.base-button--theme-primary:hover {\n    background-color: lighten($theme-primary-background, 10%);\n    border-color: lighten($theme-primary-border, 10%);\n  }\n\n  &.base-button--theme-primary:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-positive {\n    color: $theme-positive-text;\n    background-color: $theme-positive-background;\n    border: 1px solid $theme-positive-border;\n  }\n\n  &.base-button--theme-positive:hover {\n    background-color: lighten($theme-positive-background, 10%);\n    border-color: lighten($theme-positive-border, 10%);\n  }\n\n  &.base-button--theme-positive:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-neutral {\n    color: $theme-neutral-text;\n    background-color: $theme-neutral-background;\n    border: 1px solid $theme-neutral-border;\n  }\n\n  &.base-button--theme-neutral:hover {\n    background-color: lighten($theme-neutral-background, 2%);\n    border-color: lighten($theme-neutral-border, 2%);\n  }\n\n  &.base-button--theme-neutral:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-negative {\n    color: $theme-negative-text;\n    background-color: $theme-negative-background;\n    border: 1px solid $theme-negative-border;\n  }\n\n  &.base-button--theme-negative:hover {\n    background-color: lighten($theme-negative-background, 10%);\n    border-color: lighten($theme-negative-border, 10%);\n  }\n\n  &.base-button--theme-negative:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-white {\n    color: $theme-white-text;\n    background-color: $theme-white-background;\n    border: 1px solid $theme-white-border;\n  }\n\n  &.base-button--theme-white:hover {\n    background-color: lighten($theme-white-background, 10%);\n    border-color: lighten($theme-white-border, 10%);\n  }\n\n  &.base-button--theme-white:focus {\n    border-color: transparent;\n  }\n\n  &.base-button--theme-primary-dark {\n    color: $theme-primary-dark-text;\n    background-color: $theme-primary-dark-background;\n    border: 1px solid $theme-primary-dark-border;\n  }\n\n  &.base-button--theme-primary-dark:hover,\n  &.base-button--theme-primary-dark:focus {\n    background-color: lighten($theme-primary-dark-background, 10%);\n    border-color: lighten($theme-primary-dark-border, 10%);\n  }\n\n  &.base-button--theme-transparent {\n    color: #4a5568;\n    background-color: transparent;\n    border: 1px solid transparent;\n    box-shadow: none;\n  }\n\n  &.base-button--theme-transparent:hover {\n    border-color: #d5d5d5;\n    box-shadow: $shadow-hover;\n  }\n\n  &.base-button--theme-transparent:focus {\n    box-shadow: $shadow-focus;\n  }\n\n  &.base-button--size-small {\n    padding: 0.75em 1em;\n    font-size: 0.875em;\n  }\n\n  &.base-button--size-normal {\n    padding: 0.65em 0.875em;\n    font-size: 1.15em;\n  }\n\n  &.base-button--size-large {\n    padding: 0.65em 0.875em;\n    font-size: 1.15em;\n  }\n\n  @media screen and (min-width: 50rem) {\n    &.base-button--size-small {\n      font-size: 1em;\n    }\n\n    &.base-button--size-normal {\n      padding: 0.65em 0.875em;\n      font-size: 1.25em;\n    }\n\n    &.base-button--size-large {\n      padding: 0.875em 1.25em;\n      font-size: 1.5em;\n    }\n  }\n\n  &.base-button--text-align-center {\n    justify-content: center;\n  }\n\n  &.base-button--text-align-left {\n    justify-content: flex-start;\n  }\n}\n\n@media (prefers-reduced-motion: no-preference), (update: fast) {\n  .base-button {\n    transition: all 0.2s ease-out;\n  }\n}\n\n.base-button__left-icon {\n  display: inline-block;\n  margin-inline-end: 1em;\n  color: inherit;\n}\n\n.base-button__right-icon {\n  display: inline-block;\n  margin-inline-start: 1em;\n  color: inherit;\n}\n\n@media (min-width: 40em) {\n  .base-button {\n    font-size: 1.2em;\n  }\n}\n</style>\n","<template>\n  <transition name=\"fade\" :duration=\"{ enter: 300, leave: 200 }\">\n    <div\n      v-if=\"visible\"\n      class=\"modal\"\n      :class=\"classes\"\n      role=\"dialog\"\n      aria-labelledby=\"modal__heading\"\n      aria-describedby=\"modal__description\"\n    >\n      <div class=\"modal__wrapper\">\n        <div class=\"modal__overlay\" @click=\"$emit('close')\" />\n        <div class=\"modal__box\">\n          <div class=\"modal__header\" v-if=\"heading\">\n            <IconDisplay v-if=\"icon\" :name=\"icon\" class=\"modal__icon\" :spin=\"icon === 'slash'\" />\n            <h1 class=\"modal__heading\">\n              {{ heading }}\n            </h1>\n            <p v-if=\"description\" class=\"modal__description\">\n              {{ description }}\n            </p>\n          </div>\n          <div v-if=\"$slots.default\" ref=\"content\" class=\"modal__content\">\n            <slot />\n          </div>\n          <div class=\"modal__actions\">\n            <BaseButton\n              v-for=\"button in buttons || defaultButton\"\n              :key=\"button.eventName\"\n              v-bind=\"button\"\n              class=\"modal__action\"\n              @click=\"button.eventName ? $emit(button.eventName) : () => {}\"\n            >\n              {{ button.caption }}\n            </BaseButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, type PropType, ref } from 'vue';\nimport { useScrollLock } from '@vueuse/core';\nimport BaseButton, { type BaseButtonProps } from '../base-button/BaseButton.vue';\nimport IconDisplay from '../icon-display/IconDisplay.vue';\n\nexport interface BaseButtonPropsHelper extends BaseButtonProps {\n  caption: string;\n  eventName: string;\n}\n\n/**\n * Wraps content in a modal that can be hidden and shown programmatically.\n */\nexport default defineComponent({\n  name: 'ModalView',\n  // TODO: emits: ['close'],\n  components: {\n    BaseButton,\n    IconDisplay,\n  },\n  setup() {\n    const content = ref<HTMLElement | null>(null);\n    return {\n      isLocked: useScrollLock(content),\n    };\n  },\n  props: {\n    /**\n     * Wether the modal is visible.\n     */\n    visible: {\n      type: Boolean,\n      default: true,\n    },\n\n    /**\n     * The heading of the modal.\n     */\n    heading: {\n      type: String,\n      required: true,\n    },\n\n    /**\n     * The description of the modal, appearing below the heading.\n     */\n    description: {\n      type: String,\n    },\n\n    /**\n     * An array of actions (buttons) that appear below the modals content. By default, contains a\n     * simple done-button that emits the close-event.\n     */\n    buttons: {\n      type: Array as () => (BaseButtonProps & { eventName: string; caption: string })[],\n      default: null,\n    },\n\n    /**\n     * An icon shown above the modal's heading.\n     */\n    icon: {\n      type: String as PropType<string | null>,\n      default: null,\n    },\n\n    /**\n     * The width of the modal.\n     */\n    width: {\n      type: String as PropType<'slim' | 'narrow' | 'normal' | 'wide'>,\n      default: 'normal',\n      validator: (value: string) => ['slim', 'narrow', 'normal', 'wide'].includes(value),\n    },\n\n    /**\n     * Don't add padding to the modal content.\n     */\n    noPadding: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  mounted() {\n    this.$watch('visible', (visible: boolean) => {\n      this.isLocked = visible;\n    });\n  },\n  computed: {\n    classes(): string[] {\n      const classes = [`modal--width-${this.width}`];\n      if (this.noPadding) {\n        classes.push('modal--no-padding');\n      }\n      return classes;\n    },\n    defaultButton(): Partial<BaseButtonPropsHelper>[] {\n      return [\n        {\n          caption: this.$t('ui.modal.done') as string,\n          theme: 'primary',\n          eventName: 'close',\n        },\n      ];\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.modal {\n  &__wrapper {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 400;\n    padding: 1rem;\n  }\n\n  &__overlay {\n    background-color: rgba(#fff, 0.75);\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  &__box {\n    position: relative;\n    z-index: 30;\n    height: auto;\n    max-height: 90vh;\n    width: 100%;\n    max-width: 24rem;\n    background-color: #fff;\n    border-radius: $border-radius;\n    box-shadow: 0 2rem 8rem 0 rgba(#000, 0.25);\n    color: $theme-base-text;\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n  }\n  &.modal--width-slim .modal__box {\n    max-width: 24rem;\n  }\n  &.modal--width-narrow .modal__box {\n    max-width: 40rem;\n  }\n  &.modal--width-normal .modal__box {\n    max-width: 60rem;\n  }\n  &.modal--width-wide .modal__box {\n    max-width: 90rem;\n  }\n\n  &__header {\n    padding: 1rem;\n    text-align: center;\n    flex: 1 0 auto;\n  }\n\n  &__icon {\n    font-size: 1.5rem;\n    margin-top: 1rem;\n    margin-right: 0.5em;\n  }\n\n  &__heading {\n    display: inline-block;\n    font-size: 1.5rem;\n    margin: 1rem 0 0 0;\n  }\n\n  &__description {\n    max-width: 40rem;\n    margin: 1rem auto;\n  }\n\n  &__content {\n    overflow-y: auto;\n    padding: 1rem;\n    flex: 1;\n    border-bottom: 2px solid $theme-base-border;\n  }\n  &.modal--no-padding .modal__content {\n    padding: 0;\n    .accordion-list details:first-of-type,\n    .accordion-list details:last-of-type {\n      border-radius: 0;\n    }\n  }\n\n  &__actions {\n    overflow: hidden;\n    padding: 1em;\n    flex-shrink: 0;\n  }\n\n  &__action {\n    width: 100%;\n    & + & {\n      margin-top: 0.5em;\n    }\n  }\n}\n\n@media (min-width: 40rem) {\n  .modal__icon {\n    font-size: 2rem;\n    margin-right: 0;\n  }\n\n  .modal__heading {\n    display: block;\n    font-size: 2rem;\n  }\n\n  .modal__header {\n    padding: 2rem;\n  }\n\n  .modal__content {\n    padding: 2rem;\n  }\n\n  .modal__actions {\n    padding: 2em;\n  }\n\n  .modal__action + .modal__action {\n    margin-top: 1em;\n  }\n}\n\n@media (min-width: 60rem) {\n  .modal__actions {\n    padding: 0 0.5em;\n    text-align: right;\n  }\n  .modal__action {\n    width: auto;\n    display: inline-block;\n    margin: 1em 0.5em;\n    text-align: left;\n    & + & {\n      margin-top: 0;\n    }\n  }\n\n  .modal__header {\n    padding: 2rem 2rem 1rem 2rem;\n  }\n\n  .modal__content {\n    padding: 2rem;\n  }\n}\n\n.fade-enter-active,\n.fade-leave-active {\n  .modal__overlay {\n    transition: opacity 0.3s ease-out;\n  }\n  .modal__box {\n    transition: opacity 0.15s ease-out, transform 0.3s ease-out;\n  }\n}\n\n.fade-enter,\n.fade-leave-to {\n  .modal__overlay {\n    opacity: 0;\n  }\n  .modal__box {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n}\n</style>\n","<template>\n  <div>\n    <button\n      class=\"async-button\"\n      :class=\"classes\"\n      :disabled=\"disabledOrBusy\"\n      :tabindex=\"disabledOrBusy ? -1 : tabindex\"\n      :type=\"type\"\n      @click.stop=\"onClick($event)\"\n    >\n      <span\n        v-if=\"left || right\"\n        :class=\"['async-button__icon', `async-button__icon--${left ? 'left' : 'right'}`]\"\n      >\n        <transition name=\"icon\">\n          <!-- Additional div needed because we cannot apply two animations to the same element -->\n          <div class=\"icon\" v-if=\"status === 'pending'\">\n            <IconDisplay key=\"pending\" ref=\"pending-icon\" name=\"slash\" monospace spinning />\n          </div>\n          <IconDisplay\n            key=\"success\"\n            ref=\"success-icon\"\n            v-else-if=\"status === 'success'\"\n            name=\"check\"\n            monospace\n          />\n          <IconDisplay\n            key=\"error\"\n            ref=\"error-icon\"\n            v-else-if=\"status === 'error'\"\n            name=\"times\"\n            monospace\n          />\n          <IconDisplay key=\"icon\" ref=\"icon\" v-else :name=\"left ? left : right\" monospace />\n        </transition>\n      </span>\n      <span v-if=\"$slots.default\" class=\"async-button__caption\">\n        <slot />\n      </span>\n    </button>\n    <ModalView\n      :visible=\"error !== null\"\n      :heading=\"$t('ui.async-button.error.heading')\"\n      icon=\"times\"\n      width=\"slim\"\n      :buttons=\"[\n        {\n          caption: $t('ui.async-button.error.okay-button'),\n          theme: 'primary',\n          eventName: 'close',\n        },\n      ]\"\n      @close=\"error = null\"\n    >\n      {{ error }}\n    </ModalView>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, type PropType } from 'vue';\nimport IconDisplay from '../icon-display/IconDisplay.vue';\nimport ModalView from '../modal-view/ModalView.vue';\n\nexport interface AsyncButtonProps {\n  action: () => Promise<unknown>;\n  href?: string;\n  type?: 'button' | 'submit' | 'reset';\n  theme?:\n    | 'primary'\n    | 'positive'\n    | 'neutral'\n    | 'negative'\n    | 'white'\n    | 'primary-dark'\n    | 'transparent';\n  size?: 'small' | 'normal' | 'large';\n  textAlign?: 'left' | 'center';\n  left?: string;\n  right?: string;\n  disabled?: boolean;\n  tabindex: number;\n}\n\n/**\n * Renders a basic button with support for icons, themes and sizes. Will execute a given async\n * function on click, display a loading animation, indicate success or show an error message in a\n * modal.\n */\nexport default defineComponent({\n  name: 'AsyncButton',\n  components: {\n    IconDisplay,\n    ModalView,\n  },\n  emits: ['click', 'success', 'error'],\n  data() {\n    return {\n      status: 'idle' as 'idle' | 'pending' | 'error' | 'success',\n      error: null as null | string,\n      resetTimeout: null as null | ReturnType<typeof setTimeout>,\n    };\n  },\n  props: {\n    /**\n     * The asynchronous function to execute when the button is clicked. Will trigger the loading\n     * animation and wait for the promise to resolve.\n     */\n    action: {\n      type: Function as PropType<() => Promise<unknown>>,\n      required: true,\n    },\n    /**\n     * The type of button.\n     */\n    type: {\n      type: String as PropType<'button' | 'submit' | 'reset'>,\n      default: 'button',\n      validator: (value: string) => ['button', 'submit', 'reset'].includes(value),\n    },\n    /**\n     * The global theme to be used. Can indicate the purpose of the button.\n     */\n    theme: {\n      type: String,\n      default: 'primary',\n      validator: (value: string) =>\n        [\n          'primary',\n          'positive',\n          'neutral',\n          'negative',\n          'white',\n          'primary-dark',\n          'transparent',\n        ].includes(value),\n    },\n    /**\n     * The global size to be used.\n     */\n    size: {\n      type: String,\n      default: 'normal',\n      validator: (value: string) => ['small', 'normal', 'large'].includes(value),\n    },\n    textAlign: {\n      type: String,\n      default: 'center',\n      validator: (value: string) => ['left', 'center'].includes(value),\n    },\n    /**\n     * The FontAwesome icon to be displayed left of the caption.\n     */\n    left: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The FontAwesome icon to be displayed right of the caption.\n     */\n    right: {\n      type: String,\n      default: '',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    tabindex: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    classes(): string[] {\n      const classes = [\n        `async-button--theme-${this.theme}`,\n        `async-button--size-${this.size}`,\n        `async-button--text-align-${this.textAlign}`,\n      ];\n      if (this.disabledOrBusy) {\n        classes.push('async-button--disabled');\n      }\n      return classes;\n    },\n    disabledOrBusy(): boolean {\n      return this.disabled || this.status === 'pending';\n    },\n  },\n  methods: {\n    onClick(event: MouseEvent) {\n      this.$emit('click', event);\n      this.status = 'pending';\n      this.action().then(\n        (result) => {\n          this.status = 'success';\n          this.$emit('success', result);\n          this.scheduleStatusReset();\n        },\n        (error: Error) => {\n          this.status = 'error';\n          this.$emit('error', error);\n          this.error = error.message;\n          this.scheduleStatusReset();\n        }\n      );\n    },\n    scheduleStatusReset(delay = 3000) {\n      if (this.resetTimeout) {\n        clearTimeout(this.resetTimeout);\n      }\n      this.resetTimeout = setTimeout(() => {\n        this.status = 'idle';\n      }, delay);\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.async-button {\n  font-weight: 500;\n  border: 0;\n  border-radius: $border-radius;\n  box-shadow: $shadow-normal;\n  appearance: none;\n  display: inline-flex;\n  flex-wrap: nowrap;\n  align-items: center;\n\n  &:hover {\n    outline: none;\n    box-shadow: $shadow-hover;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: $shadow-focus;\n  }\n\n  &.async-button--theme-primary:disabled,\n  &.async-button--theme-primary.async-button--disabled,\n  &.async-button--theme-positive:disabled,\n  &.async-button--theme-positive.async-button--disabled,\n  &.async-button--theme-neutral:disabled,\n  &.async-button--theme-neutral.async-button--disabled,\n  &.async-button--theme-negative:disabled,\n  &.async-button--theme-negative.async-button--disabled,\n  &.async-button--theme-white:disabled,\n  &.async-button--theme-white.async-button--disabled,\n  &.async-button--theme-primary-dark:disabled,\n  &.async-button--theme-primary-dark.async-button--disabled {\n    box-shadow: $shadow-normal !important;\n    cursor: default;\n    opacity: 0.35;\n  }\n  &.async-button--theme-transparent:disabled,\n  &.async-button--theme-transparent.async-button--disabled {\n    cursor: default;\n    opacity: 0.5;\n  }\n\n  &.async-button--theme-primary {\n    color: $theme-primary-text;\n    background-color: $theme-primary-background;\n    border: 1px solid $theme-primary-border;\n  }\n\n  &.async-button--theme-primary:hover {\n    background-color: lighten($theme-primary-background, 10%);\n    border-color: lighten($theme-primary-border, 10%);\n  }\n\n  &.async-button--theme-primary:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-positive {\n    color: $theme-positive-text;\n    background-color: $theme-positive-background;\n    border: 1px solid $theme-positive-border;\n  }\n\n  &.async-button--theme-positive:hover {\n    background-color: lighten($theme-positive-background, 10%);\n    border-color: lighten($theme-positive-border, 10%);\n  }\n\n  &.async-button--theme-positive:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-neutral {\n    color: $theme-neutral-text;\n    background-color: $theme-neutral-background;\n    border: 1px solid $theme-neutral-border;\n  }\n\n  &.async-button--theme-neutral:hover {\n    background-color: lighten($theme-neutral-background, 2%);\n    border-color: lighten($theme-neutral-border, 2%);\n  }\n\n  &.async-button--theme-neutral:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-negative {\n    color: $theme-negative-text;\n    background-color: $theme-negative-background;\n    border: 1px solid $theme-negative-border;\n  }\n\n  &.async-button--theme-negative:hover {\n    background-color: lighten($theme-negative-background, 10%);\n    border-color: lighten($theme-negative-border, 10%);\n  }\n\n  &.async-button--theme-negative:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-white {\n    color: $theme-white-text;\n    background-color: $theme-white-background;\n    border: 1px solid $theme-white-border;\n  }\n\n  &.async-button--theme-white:hover {\n    background-color: lighten($theme-white-background, 10%);\n    border-color: lighten($theme-white-border, 10%);\n  }\n\n  &.async-button--theme-white:focus {\n    border-color: transparent;\n  }\n\n  &.async-button--theme-primary-dark {\n    color: $theme-primary-dark-text;\n    background-color: $theme-primary-dark-background;\n    border: 1px solid $theme-primary-dark-border;\n  }\n\n  &.async-button--theme-primary-dark:hover,\n  &.async-button--theme-primary-dark:focus {\n    background-color: lighten($theme-primary-dark-background, 10%);\n    border-color: lighten($theme-primary-dark-border, 10%);\n  }\n\n  &.async-button--theme-transparent {\n    color: #4a5568;\n    background-color: transparent;\n    border: 1px solid transparent;\n    box-shadow: none;\n  }\n\n  &.async-button--theme-transparent:hover {\n    border-color: #d5d5d5;\n    box-shadow: $shadow-hover;\n  }\n\n  &.async-button--theme-transparent:focus {\n    box-shadow: $shadow-focus;\n  }\n\n  &.async-button--size-small {\n    padding: 0.75em 1em;\n    font-size: 0.875em;\n  }\n\n  &.async-button--size-normal {\n    padding: 0.65em 0.875em;\n    font-size: 1.15em;\n  }\n\n  &.async-button--size-large {\n    padding: 0.65em 0.875em;\n    font-size: 1.15em;\n  }\n\n  @media screen and (min-width: 50rem) {\n    &.async-button--size-small {\n      font-size: 1em;\n    }\n\n    &.async-button--size-normal {\n      padding: 0.65em 0.875em;\n      font-size: 1.25em;\n    }\n\n    &.async-button--size-large {\n      padding: 0.875em 1.25em;\n      font-size: 1.5em;\n    }\n  }\n\n  &.async-button--text-align-center {\n    justify-content: center;\n  }\n\n  &.async-button--text-align-left {\n    justify-content: flex-start;\n  }\n}\n\n.async-button__icon {\n  display: inline-block;\n  color: inherit;\n  width: 1.25em;\n  height: 1em;\n  position: relative;\n  .icon {\n    position: absolute;\n    left: 0;\n  }\n}\n\n.async-button__icon--left {\n  margin-inline-start: 1em;\n}\n\n.async-button__icon--right {\n  margin-inline-start: 1em;\n  order: 2;\n}\n\n@media (min-width: 40em) {\n  .async-button {\n    font-size: 1.2em;\n  }\n}\n\n@media (prefers-reduced-motion: no-preference), (update: fast) {\n  .async-button {\n    transition: all 0.2s ease-out;\n  }\n  .icon-enter-active {\n    transition: all 0.55s ease-out;\n  }\n  .icon-enter {\n    transform: translateX(1em);\n    opacity: 0;\n    [dir='rtl'] & {\n      transform: translateX(-1em);\n    }\n  }\n  .icon-leave-active {\n    transition: all 0.25s ease-out;\n  }\n  .icon-leave-to {\n    transform: translateX(-1em);\n    opacity: 0;\n    [dir='rtl'] & {\n      transform: translateX(1em);\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      'field-input': true,\n      'field-input--invalid': field.errors.value.length > 0,\n      'field-input--valid': field.errors.value.length <= 0 && field.meta.dirty,\n    }\"\n  >\n    <label :for=\"alias\" class=\"field-input__label\">\n      {{ label }}\n    </label>\n    <input\n      class=\"field-input__input\"\n      :type=\"type\"\n      :name=\"alias\"\n      :id=\"`field-${alias}`\"\n      :placeholder=\"placeholder\"\n      :autocomplete=\"autocomplete\"\n      :readonly=\"readonly\"\n      v-model=\"field.value.value\"\n      @blur=\"publish\"\n      @change=\"field.handleChange\"\n    />\n    <small v-if=\"field.errors.value.length < 1\" class=\"field-input__description\">\n      <slot name=\"description\">{{ description }}</slot>\n    </small>\n    <small v-else class=\"field-input__error\">{{ field.errors.value[0] }}</small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, type PropType, toRef } from 'vue';\nimport { useField, type ValidationResult } from 'vee-validate';\n\n/**\n * Renders a textual input field, like text, email, number, etc. together with a label, description\n * and validation.\n */\nexport default defineComponent({\n  name: 'FieldInput',\n  data() {\n    return {\n      currentValidation: null as null | Promise<void | ValidationResult>,\n    };\n  },\n  emits: ['update:value'],\n  setup(props) {\n    // Create Ref on alias. This is important because vee-validate needs to know if the field name\n    // changes.\n    const alias = toRef(props, 'alias');\n    const name = toRef(props, 'name');\n\n    // Create Field\n    return {\n      field: useField<string>(alias, props.rules, {\n        label: name,\n        type: props.type,\n        initialValue: props.value,\n      }),\n    };\n  },\n  watch: {\n    value(value: string): void {\n      this.field.setValue(value);\n    },\n  },\n  props: {\n    /**\n     * The name of the field in kebab-case.\n     */\n    alias: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The human readable name of the field.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label above the field.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The input type.\n     */\n    type: {\n      type: String as PropType<'email' | 'file' | 'number' | 'password' | 'tel' | 'text' | 'url'>,\n      required: true,\n      validator: (value: string) => {\n        return ['email', 'file', 'number', 'password', 'tel', 'text', 'url'].includes(value);\n      },\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    /**\n     * A set of vee-validate rules.\n     */\n    rules: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      required: true,\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The description below the field.\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    autocomplete: {\n      type: String,\n      default: undefined,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    publish(): void {\n      this.field.handleBlur();\n      this.currentValidation = this.field.validate().then((result: ValidationResult) => {\n        this.currentValidation = null;\n        if (result.valid && this.field.value.value !== null) {\n          this.$emit('update:value', this.field.value.value);\n        } else {\n          this.$emit('update:value', '');\n        }\n      });\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.field-input__label {\n  display: block;\n  margin-bottom: 0.5rem;\n  transition: color 0.2s ease-out;\n}\n\n.field-input--invalid .field-input__label {\n  color: $theme-negative-background;\n}\n\n.field-input__input {\n  padding: 0.5rem;\n  border-radius: 3px;\n  border: 1px solid #ddd;\n  display: block;\n  font-size: 1.4rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: border-color 0.2s ease-out;\n  &:hover {\n    border-color: $theme-neutral-border;\n  }\n  &:focus {\n    outline: none;\n    border-color: #999;\n  }\n  &::placeholder {\n    font-style: italic;\n    color: #ccc;\n  }\n}\n\n.field-input--invalid .field-input__input {\n  border-color: $theme-negative-border;\n}\n\n.field-input__description {\n  display: inline-block;\n  margin-top: 0.5em;\n  font-style: italic;\n  color: #999;\n}\n\n.field-input__error {\n  display: inline-block;\n  margin-top: 0.5em;\n  border-radius: $border-radius;\n  padding: 0.35em 0.5em;\n  background-color: $theme-negative-background;\n  color: $theme-negative-text;\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      'field-select': true,\n      'field-select--invalid': field.errors.value.length > 0,\n      'field-select--valid': field.errors.value.length <= 0 && field.meta.dirty,\n    }\"\n  >\n    <label :for=\"alias\" class=\"field-select__label\">\n      {{ label }}\n    </label>\n    <IconDisplay name=\"angle-down\" class=\"field-select__icon\" />\n    <select\n      class=\"field-select__select\"\n      :name=\"alias\"\n      :id=\"`field-${alias}`\"\n      :readonly=\"readonly\"\n      v-model=\"field.value.value\"\n      @blur=\"field.handleBlur\"\n      @change=\"publish\"\n    >\n      <option :value=\"null\" disabled>{{ $t('ui.fields.select.choose') }}</option>\n      <option v-for=\"option in options\" :key=\"option.value\" :value=\"option.value\">\n        {{ option.option }}\n      </option>\n    </select>\n    <small v-if=\"field.errors.value.length < 1\" class=\"field-select__description\">\n      <slot name=\"description\">{{ description }}</slot>\n    </small>\n    <small v-else class=\"field-select__error\">{{ field.errors.value[0] }}</small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, toRef, type PropType } from 'vue';\nimport IconDisplay from '../../icon-display/IconDisplay.vue';\nimport { useField, type ValidationResult } from 'vee-validate';\n\n/**\n * Renders a select field together with a label, description and validation.\n */\nexport default defineComponent({\n  name: 'FieldSelect',\n  components: {\n    IconDisplay,\n  },\n  data() {\n    return {\n      currentValidation: null as null | Promise<void | ValidationResult>,\n    };\n  },\n  emits: ['update:value'],\n  setup(props) {\n    // Create Ref on alias. This is important because vee-validate needs to know if the field name\n    // changes.\n    const alias = toRef(props, 'alias');\n    const name = toRef(props, 'name');\n\n    // Create Field\n    return {\n      field: useField<string>(alias, props.rules, {\n        label: name,\n        initialValue: props.value,\n      }),\n    };\n  },\n  watch: {\n    value(value) {\n      this.field.setValue(value);\n    },\n  },\n  props: {\n    /**\n     * The name of the field in kebab-case.\n     */\n    alias: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The human readable name of the field.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label above the field.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    /**\n     * An array of options in this form: `{ value: string, option: string }`.\n     */\n    options: {\n      type: Array as () => { option: string; value: string }[],\n      required: true,\n    },\n    /**\n     * A set of vee-validate rules.\n     */\n    rules: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      required: true,\n    },\n    /**\n     * The description below the field.\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    publish(): void {\n      this.currentValidation = this.field.validate().then((result: ValidationResult) => {\n        this.currentValidation = null;\n        if (result.valid && this.field.value.value !== null) {\n          this.$emit('update:value', this.field.value.value);\n        } else {\n          this.$emit('update:value', '');\n        }\n      });\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.field-select {\n  position: relative;\n}\n\n.field-select__label {\n  display: block;\n  margin-bottom: 0.5rem;\n  transition: color 0.2s ease-out;\n}\n\n.field-select--invalid .field-select__label {\n  color: $theme-negative-background;\n}\n\n.field-select__icon {\n  position: absolute;\n  color: $theme-neutral-text;\n  margin-top: 1.25em;\n  pointer-events: none;\n  right: 1em;\n  [dir='rtl'] & {\n    right: unset;\n    left: 1em;\n  }\n}\n\n.field-select__select {\n  box-shadow: $shadow-normal;\n  border-radius: $border-radius;\n  transition: box-shadow 0.2s ease-out;\n  appearance: none;\n  background-color: $theme-neutral-background;\n  color: $theme-neutral-text;\n  border: 1px solid $theme-neutral-border;\n  padding: 1em;\n  cursor: pointer;\n  transition: all 0.2s ease-out;\n  display: block;\n  width: 100%;\n  &:hover {\n    box-shadow: $shadow-hover;\n  }\n  &:focus {\n    outline: 0;\n    box-shadow: $shadow-focus;\n  }\n}\n\n.field-select__description {\n  display: block;\n  margin-top: 0.5rem;\n  font-style: italic;\n  color: #999;\n}\n\n.field-select__error {\n  display: inline-block;\n  margin-top: 0.5em;\n  border-radius: $border-radius;\n  padding: 0.35em 0.5em;\n  background-color: $theme-negative-background;\n  color: $theme-negative-text;\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      'field-switch': true,\n      'field-switch--invalid': field.errors.value.length > 0,\n      'field-switch--valid': field.errors.value.length <= 0 && field.meta.dirty,\n    }\"\n  >\n    <label :for=\"alias\" class=\"field-switch__label\">\n      {{ label }}\n    </label>\n    <div class=\"field-switch__radio-group\">\n      <div v-for=\"button in options\" :key=\"button.value\" class=\"field-switch__radio-button\">\n        <input\n          class=\"field-switch__input\"\n          type=\"radio\"\n          :name=\"alias\"\n          :id=\"`field-${alias}-${button.value}`\"\n          :value=\"button.value\"\n          :readonly=\"readonly\"\n          v-model=\"field.value.value\"\n          @change=\"publish\"\n        />\n        <label class=\"field-switch__button\" :for=\"`field-${alias}-${button.value}`\">\n          {{ button.option }}\n        </label>\n      </div>\n    </div>\n    <small v-if=\"field.errors.value.length < 1\" class=\"field-switch__description\">\n      <slot name=\"description\">{{ description }}</slot>\n    </small>\n    <small v-else class=\"field-switch__error\">{{ field.errors.value[0] }}</small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, toRef, type PropType } from 'vue';\nimport { useField, type ValidationResult } from 'vee-validate';\n\n/**\n * Renders a radio group but in a switch-like design.\n */\nexport default defineComponent({\n  name: 'FieldSwitch',\n  data() {\n    return {\n      currentValidation: null as null | Promise<void | ValidationResult>,\n    };\n  },\n  emits: ['update:value'],\n  setup(props) {\n    // Create Ref on alias. This is important because vee-validate needs to know if the field name\n    // changes.\n    const alias = toRef(props, 'alias');\n    const name = toRef(props, 'name');\n\n    // Create Field\n    return {\n      field: useField<string>(alias, props.rules, {\n        label: name,\n        type: 'radio',\n        initialValue: props.value,\n      }),\n    };\n  },\n  watch: {\n    value(value: string): void {\n      this.field?.setValue(value);\n    },\n  },\n  props: {\n    /**\n     * The name of the field in kebab-case.\n     */\n    alias: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The human readable name of the field.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label above the field.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    /**\n     * An array of options in this form: `{ value: string, option: string }`.\n     */\n    options: {\n      type: Array as () => { value: string; option: string }[],\n      required: true,\n    },\n    /**\n     * A set of vee-validate rules.\n     */\n    rules: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      required: true,\n    },\n    /**\n     * The description below the field.\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    publish(): void {\n      this.currentValidation = this.field.validate().then((result: ValidationResult) => {\n        this.currentValidation = null;\n        if (result.valid && this.field.value.value !== null) {\n          this.$emit('update:value', this.field.value.value);\n        } else {\n          this.$emit('update:value', '');\n        }\n      });\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.field-switch__label {\n  display: block;\n  margin-bottom: 0.5rem;\n  transition: color 0.2s ease-out;\n}\n\n.field-switch--invalid .field-switch__label {\n  color: $theme-negative-background;\n}\n\n.field-switch__radio-group {\n  box-shadow: $shadow-normal;\n  border-radius: $border-radius;\n  transition: box-shadow 0.2s ease-out;\n  &:hover {\n    box-shadow: $shadow-hover;\n  }\n  &:focus-within {\n    box-shadow: $shadow-focus;\n  }\n}\n\n.field-switch__input {\n  position: absolute;\n  left: -10000px;\n  top: auto;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  &:checked + .field-switch__button {\n    background-color: $theme-primary-background;\n    color: $theme-primary-text;\n    border-left-color: $theme-primary-border;\n    border-right-color: $theme-primary-border;\n  }\n}\n\n.field-switch__button {\n  display: block;\n  padding: 1em;\n  margin: 0;\n  cursor: pointer;\n  background-color: $theme-neutral-background;\n  color: $theme-neutral-text;\n  border: 1px solid $theme-neutral-border;\n  text-align: center;\n  transition: all 0.2s ease-out;\n  &:hover,\n  &:focus {\n    filter: brightness(1.025);\n  }\n}\n\n.field-switch__radio-button {\n  &:first-child {\n    .field-switch__input:checked + .field-switch__button {\n      border-top-color: $theme-primary-border;\n    }\n    .field-switch__button {\n      border-radius: $border-radius $border-radius 0 0;\n    }\n  }\n  &:last-child {\n    .field-switch__input:checked + .field-switch__button {\n      border-bottom-color: $theme-primary-border;\n    }\n    .field-switch__button {\n      border-radius: 0 0 $border-radius $border-radius;\n    }\n  }\n  & + & .field-switch__button {\n    border-top: 0;\n  }\n}\n\n.field-switch__description {\n  display: block;\n  margin-top: 0.5rem;\n  font-style: italic;\n  color: #999;\n}\n\n.field-switch__error {\n  display: inline-block;\n  margin-top: 0.5em;\n  border-radius: $border-radius;\n  padding: 0.35em 0.5em;\n  background-color: $theme-negative-background;\n  color: $theme-negative-text;\n}\n</style>\n","<template>\n  <div\n    :class=\"{\n      'field-textarea': true,\n      'field-textarea--invalid': field.errors.value.length > 0,\n      'field-textarea--valid': field.errors.value.length <= 0 && field.meta.dirty,\n    }\"\n  >\n    <label :for=\"alias\" class=\"field-textarea__label\">\n      {{ label }}\n    </label>\n    <textarea\n      class=\"field-textarea__textarea\"\n      :name=\"alias\"\n      :id=\"`field-${alias}`\"\n      :placeholder=\"placeholder\"\n      :readonly=\"readonly\"\n      v-model=\"field.value.value\"\n      @blur=\"publish\"\n      @change=\"field.handleChange\"\n    />\n    <small v-if=\"field.errors.value.length < 1\" class=\"field-textarea__description\">\n      <slot name=\"description\">{{ description }}</slot>\n    </small>\n    <small v-else class=\"field-textarea__error\">{{ field.errors.value[0] }}</small>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, toRef, type PropType } from 'vue';\nimport { useField, type ValidationResult } from 'vee-validate';\n\n/**\n * Renders a textarea together with a label, description and validation.\n */\nexport default defineComponent({\n  name: 'FieldTextarea',\n  data() {\n    return {\n      currentValidation: null as null | Promise<void | ValidationResult>,\n    };\n  },\n  emits: ['update:value'],\n  setup(props) {\n    // Create Ref on alias. This is important because vee-validate needs to know if the field name\n    // changes.\n    const alias = toRef(props, 'alias');\n    const name = toRef(props, 'name');\n\n    // Create Field\n    return {\n      field: useField<string>(alias, props.rules, {\n        label: name,\n        initialValue: props.value,\n      }),\n    };\n  },\n  watch: {\n    value(value: string): void {\n      this.field.setValue(value);\n    },\n  },\n  props: {\n    /**\n     * The name of the field in kebab-case.\n     */\n    alias: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The human readable name of the field.\n     */\n    name: {\n      type: String,\n      required: true,\n    },\n    /**\n     * The label above the field.\n     */\n    label: {\n      type: String,\n      required: true,\n    },\n    value: {\n      type: String,\n      default: null,\n    },\n    /**\n     * A set of vee-validate rules.\n     */\n    rules: {\n      type: [String, Object] as PropType<string | Record<string, unknown>>,\n      required: true,\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    /**\n     * The description below the field.\n     */\n    description: {\n      type: String,\n      default: '',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  methods: {\n    publish(): void {\n      this.field.handleBlur();\n      this.currentValidation = this.field.validate().then((result: ValidationResult) => {\n        this.currentValidation = null;\n        if (result.valid && this.field.value.value !== null) {\n          this.$emit('update:value', this.field.value.value);\n        } else {\n          this.$emit('update:value', '');\n        }\n      });\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n@import '@/styles/core';\n\n.field-textarea__label {\n  display: block;\n  margin-bottom: 0.5rem;\n  transition: color 0.2s ease-out;\n}\n\n.field-textarea--invalid .field-textarea__label {\n  color: $theme-negative-background;\n}\n\n.field-textarea__textarea {\n  padding: 0.5rem;\n  border-radius: 3px;\n  border: 1px solid #ddd;\n  display: block;\n  font-size: 1.4rem;\n  width: 100%;\n  box-sizing: border-box;\n  transition: border-color 0.2s ease-out;\n  &:hover {\n    border-color: $theme-neutral-border;\n  }\n  &:focus {\n    outline: none;\n    border-color: #999;\n  }\n  &::placeholder {\n    font-style: italic;\n    color: #ccc;\n  }\n}\n\n.field-textarea--invalid .field-textarea__textarea {\n  border-color: $theme-negative-border;\n}\n\n.field-textarea__description {\n  display: inline-block;\n  margin-top: 0.5em;\n  font-style: italic;\n  color: #999;\n}\n\n.field-textarea__error {\n  display: inline-block;\n  margin-top: 0.5em;\n  border-radius: $border-radius;\n  padding: 0.35em 0.5em;\n  background-color: $theme-negative-background;\n  color: $theme-negative-text;\n}\n</style>\n"],"names":["_hoisted_1","_openBlock","_createElementBlock","_Fragment","_renderList","_createElementVNode","_toDisplayString","_resolveComponent","_createBlock","_hoisted_2","_hoisted_3","_resolveDynamicComponent","_normalizeClass","_withCtx","_createVNode","_createCommentVNode","_hoisted_5","_hoisted_6","_Transition","_hoisted_4","_mergeProps","_withModifiers","_withDirectives","_vModelDynamic","_renderSlot","_vModelSelect","_vModelRadio","_vModelText"],"mappings":"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"}